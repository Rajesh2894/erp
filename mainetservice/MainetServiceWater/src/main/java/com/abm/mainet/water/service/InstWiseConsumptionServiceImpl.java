/*
 * Created on 20 May 2016 ( Time 15:06:00 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.water.service;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.abm.mainet.common.constant.MainetConstants;
import com.abm.mainet.water.domain.InstWiseConsmpEntity;
import com.abm.mainet.water.dto.TbWtInstCsmp;
import com.abm.mainet.water.mapper.TbWtInstCsmpServiceMapper;
import com.abm.mainet.water.repository.InstWiseConsmpJpaRepository;

/**
 * Implementation of TbWtInstCsmpService
 */
@Component
@Transactional
public class InstWiseConsumptionServiceImpl implements InstWiseConsmpService {

    @Resource
    private InstWiseConsmpJpaRepository tbWtInstCsmpJpaRepository;

    @Resource
    private TbWtInstCsmpServiceMapper tbWtInstCsmpServiceMapper;

    @Override
    @Transactional(readOnly = true)
    public TbWtInstCsmp findById(final Long instId) {
        final InstWiseConsmpEntity tbWtInstCsmpEntity = tbWtInstCsmpJpaRepository.findOne(instId);
        return tbWtInstCsmpServiceMapper.mapTbWtInstCsmpEntityToTbWtInstCsmp(tbWtInstCsmpEntity);
    }

    @Override
    @Transactional(readOnly = true)
    public List<TbWtInstCsmp> findAll() {
        final Iterable<InstWiseConsmpEntity> entities = tbWtInstCsmpJpaRepository.findAll();
        final List<TbWtInstCsmp> beans = new ArrayList<>();
        for (final InstWiseConsmpEntity tbWtInstCsmpEntity : entities) {
            beans.add(tbWtInstCsmpServiceMapper.mapTbWtInstCsmpEntityToTbWtInstCsmp(tbWtInstCsmpEntity));
        }
        return beans;
    }

    @Override
    public TbWtInstCsmp create(final TbWtInstCsmp tbWtInstCsmp, final Long orgId, final int langId, final Long empId) {
        InstWiseConsmpEntity tbWtInstCsmpEntity = tbWtInstCsmpJpaRepository.findOne(tbWtInstCsmp.getInstId());
        if (tbWtInstCsmpEntity != null) {
            throw new IllegalStateException("already.exists");
        }
        tbWtInstCsmpEntity = new InstWiseConsmpEntity();
        tbWtInstCsmpServiceMapper.mapTbWtInstCsmpToTbWtInstCsmpEntity(tbWtInstCsmp, tbWtInstCsmpEntity);
        setEntityFieldValues(orgId, langId, empId, tbWtInstCsmpEntity);
        final InstWiseConsmpEntity tbWtInstCsmpEntitySaved = tbWtInstCsmpJpaRepository.save(tbWtInstCsmpEntity);
        return tbWtInstCsmpServiceMapper.mapTbWtInstCsmpEntityToTbWtInstCsmp(tbWtInstCsmpEntitySaved);
    }

    /**
     * @param orgId
     * @param langId
     * @param empId
     * @param tbWtInstCsmpEntity
     */
    private void setEntityFieldValues(final Long orgId, final int langId, final Long empId,
            final InstWiseConsmpEntity tbWtInstCsmpEntity) {
        tbWtInstCsmpEntity.setLmoddate(new Date());
        tbWtInstCsmpEntity.setUserId(empId);
        tbWtInstCsmpEntity.setOrgid(orgId);
        tbWtInstCsmpEntity.setLangId(Long.valueOf(langId));
    }

    @Override
    public TbWtInstCsmp update(final TbWtInstCsmp tbWtInstCsmp, final Long orgId, final int langId, final Long empId)
            throws Exception {
        final InstWiseConsmpEntity tbWtInstCsmpEntity = tbWtInstCsmpJpaRepository.findOne(tbWtInstCsmp.getInstId());
        tbWtInstCsmpServiceMapper.mapTbWtInstCsmpToTbWtInstCsmpEntity(tbWtInstCsmp, tbWtInstCsmpEntity);
        final SimpleDateFormat sdf = new SimpleDateFormat(MainetConstants.CommonConstants.DATE_FORMATE);
        if (tbWtInstCsmp.getInstFrmDtStringFormat() != null) {
            tbWtInstCsmpEntity.setInstFrmdt(sdf.parse(tbWtInstCsmp.getInstFrmDtStringFormat()));
        }
        if (tbWtInstCsmp.getInstToDtStringFormat() != null) {
            tbWtInstCsmpEntity.setInstTodt(sdf.parse(tbWtInstCsmp.getInstToDtStringFormat()));
        }
        setEntityFieldValues(orgId, langId, empId, tbWtInstCsmpEntity);
        final InstWiseConsmpEntity tbWtInstCsmpEntitySaved = tbWtInstCsmpJpaRepository.save(tbWtInstCsmpEntity);
        return tbWtInstCsmpServiceMapper.mapTbWtInstCsmpEntityToTbWtInstCsmp(tbWtInstCsmpEntitySaved);
    }

    @Override
    public void delete(final Long instId) {
        tbWtInstCsmpJpaRepository.delete(instId);
    }

    public InstWiseConsmpJpaRepository getTbWtInstCsmpJpaRepository() {
        return tbWtInstCsmpJpaRepository;
    }

    public void setTbWtInstCsmpJpaRepository(final InstWiseConsmpJpaRepository tbWtInstCsmpJpaRepository) {
        this.tbWtInstCsmpJpaRepository = tbWtInstCsmpJpaRepository;
    }

    public TbWtInstCsmpServiceMapper getTbWtInstCsmpServiceMapper() {
        return tbWtInstCsmpServiceMapper;
    }

    public void setTbWtInstCsmpServiceMapper(final TbWtInstCsmpServiceMapper tbWtInstCsmpServiceMapper) {
        this.tbWtInstCsmpServiceMapper = tbWtInstCsmpServiceMapper;
    }
}
