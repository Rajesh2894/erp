/*
 * Created on 20 May 2016 ( Time 14:54:13 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.water.service;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.abm.mainet.common.constant.MainetConstants;
import com.abm.mainet.water.domain.SlopePrmEntity;
import com.abm.mainet.water.dto.TbSlopePrm;
import com.abm.mainet.water.mapper.TbSlopePrmServiceMapper;
import com.abm.mainet.water.repository.SlopePrmJpaRepository;

/**
 * Implementation of TbSlopePrmService
 */
@Component
@Transactional
public class SlopePrmServiceImpl implements SlopePrmService {

    @Resource
    private SlopePrmJpaRepository tbSlopePrmJpaRepository;

    @Resource
    private TbSlopePrmServiceMapper tbSlopePrmServiceMapper;

    @Override
    @Transactional(readOnly = true)
    public TbSlopePrm findById(final Long spId) {
        final SlopePrmEntity SlopePrmEntity = tbSlopePrmJpaRepository.findOne(spId);
        return tbSlopePrmServiceMapper.mapTbSlopePrmEntityToTbSlopePrm(SlopePrmEntity);
    }

    @Override
    @Transactional(readOnly = true)
    public List<TbSlopePrm> findAll() {
        final Iterable<SlopePrmEntity> entities = tbSlopePrmJpaRepository.findAll();
        final List<TbSlopePrm> beans = new ArrayList<>();
        for (final SlopePrmEntity SlopePrmEntity : entities) {
            beans.add(tbSlopePrmServiceMapper.mapTbSlopePrmEntityToTbSlopePrm(SlopePrmEntity));
        }
        return beans;
    }

    @Override
    public TbSlopePrm save(final TbSlopePrm tbSlopePrm) throws Exception {
        return update(tbSlopePrm);
    }

    @Override
    public TbSlopePrm create(final TbSlopePrm tbSlopePrm, final Long orgId, final int langId, final Long empId) throws Exception {
        SlopePrmEntity SlopePrmEntity = null;
        if (tbSlopePrm.getSpId() != null) {
            SlopePrmEntity = tbSlopePrmJpaRepository.findOne(tbSlopePrm.getSpId());
        }
        if (SlopePrmEntity != null) {
            throw new IllegalStateException("already.exists");
        }
        SlopePrmEntity = new SlopePrmEntity();
        final SimpleDateFormat sdf = new SimpleDateFormat(MainetConstants.CommonConstants.DATE_FORMATE);
        tbSlopePrm.setSpFrmdt(sdf.parse(tbSlopePrm.getSpFrmdtStringFormat()));
        tbSlopePrm.setSpTodt(sdf.parse(tbSlopePrm.getSpTodtStringFormat()));
        tbSlopePrmServiceMapper.mapTbSlopePrmToTbSlopePrmEntity(tbSlopePrm, SlopePrmEntity);
        SlopePrmEntity.setLmoddate(new Date());
        SlopePrmEntity.setUserId(empId);
        SlopePrmEntity.setOrgid(orgId);
        SlopePrmEntity.setLangId(Long.valueOf(langId));
        final SlopePrmEntity tbSlopePrmEntitySaved = tbSlopePrmJpaRepository.save(SlopePrmEntity);
        return tbSlopePrmServiceMapper.mapTbSlopePrmEntityToTbSlopePrm(tbSlopePrmEntitySaved);
    }

    @Override
    public TbSlopePrm update(final TbSlopePrm tbSlopePrm) throws Exception {
        final SlopePrmEntity SlopePrmEntity = tbSlopePrmJpaRepository.findOne(tbSlopePrm.getSpId());
        tbSlopePrm.setLmoddate(SlopePrmEntity.getLmoddate());
        tbSlopePrm.setUserId(SlopePrmEntity.getUserId());
        tbSlopePrm.setLangId(SlopePrmEntity.getLangId());
        final SimpleDateFormat sdf = new SimpleDateFormat(MainetConstants.CommonConstants.DATE_FORMATE);
        if (SlopePrmEntity.getSpFrmdt() == null) {
            tbSlopePrm.setSpFrmdt(sdf.parse(tbSlopePrm.getSpFrmdtStringFormat()));
        }
        tbSlopePrm.setSpTodt(sdf.parse(tbSlopePrm.getSpTodtStringFormat()));
        tbSlopePrmServiceMapper.mapTbSlopePrmToTbSlopePrmEntity(tbSlopePrm, SlopePrmEntity);
        final SlopePrmEntity tbSlopePrmEntitySaved = tbSlopePrmJpaRepository.save(SlopePrmEntity);
        return tbSlopePrmServiceMapper.mapTbSlopePrmEntityToTbSlopePrm(tbSlopePrmEntitySaved);
    }

    @Override
    public void delete(final Long spId) {
        tbSlopePrmJpaRepository.delete(spId);
    }

    public SlopePrmJpaRepository getTbSlopePrmJpaRepository() {
        return tbSlopePrmJpaRepository;
    }

    public void setTbSlopePrmJpaRepository(final SlopePrmJpaRepository tbSlopePrmJpaRepository) {
        this.tbSlopePrmJpaRepository = tbSlopePrmJpaRepository;
    }

    public TbSlopePrmServiceMapper getTbSlopePrmServiceMapper() {
        return tbSlopePrmServiceMapper;
    }

    public void setTbSlopePrmServiceMapper(final TbSlopePrmServiceMapper tbSlopePrmServiceMapper) {
        this.tbSlopePrmServiceMapper = tbSlopePrmServiceMapper;
    }
}
