/*
 * Created on 13 May 2016 ( Time 13:32:21 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.water.service;

import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;

import org.springframework.web.servlet.ModelAndView;

import com.abm.mainet.common.domain.Organisation;
import com.abm.mainet.common.integration.dms.client.FileNetApplicationClient;
import com.abm.mainet.common.integration.dto.BillTaxDTO;
import com.abm.mainet.common.integration.dto.TbBillDet;
import com.abm.mainet.common.integration.dto.TbBillMas;
import com.abm.mainet.common.master.dto.TbTaxMas;
import com.abm.mainet.water.domain.TbWtBillMasEntity;
import com.abm.mainet.water.dto.TbCsmrInfoDTO;
import com.abm.mainet.water.dto.WaterBillGenErrorDTO;
import com.abm.mainet.water.dto.WaterBillPrintSkdclDTO;
import com.abm.mainet.water.dto.WaterBillPrintingDTO;
import com.abm.mainet.water.dto.WaterBillTaxDTO;
import com.abm.mainet.water.dto.WaterPenaltyDto;
import com.abm.mainet.water.rest.dto.WaterBillRequestDTO;

/**
 * Business Service Interface for entity TbWtBillMas.
 */
public interface TbWtBillMasService {

    /**
     * Updates the given entity in the database
     * 
     * @param entity
     * @return
     */
    TbBillMas update(TbBillMas entity);

    /**
     * @param csIdn
     * @param orgid
     * @param billTo
     * @param billFrom
     * @return
     */
    TbBillMas getBillMaster(Long csIdn, long orgid, Date billFrom, Date billTo);

    /**
     * @param errorDto
     */
    void insertIntoErrorTable(WaterBillGenErrorDTO errorDto);

    /**
	 * @param billPrintIds
	 * @param org
	 * @return
	 */
	List<Object[]> getBillPrintingData(List<Long> billPrintIds, Organisation org);

    /**
     * @param billMasPrint
     * @param orgid
     * @param billIds
     * @param fileNetApplicationClient
     * @param string
     * @return
     */
    Map<Long, WaterBillPrintingDTO> prinBillData(Map<Long, WaterBillPrintingDTO> billMasPrint, Organisation orgnisation,
	    List<String> billIds, String meterType, FileNetApplicationClient fileNetApplicationClient, List<TbTaxMas> taxesMaster,Long applicationNo,String billGenGlag,Long surchargeTaxId);

    /**
     * @param dto
     * @param watertax
     * @param organisation
     * @return
     */
    BillTaxDTO getRebateAmountForPayment(TbCsmrInfoDTO dto, TbBillMas watertax, Organisation organisation,Date manualDate);

    Calendar getBillingScheduleDueDate(String meterType, Organisation orgnisation, Date startDate);

    List<Object[]> fetchConnectionDataAndBillId(Long csIdn, Long orgid);

    public void updateBillGeneratedFlagInMeter(final Set<Long> connectionids, final long orgnisation);

    public boolean validateBillPresentOrNot(final Long mmMtnid, final long orgid, final int month);

    List<Long> billCalculationAndGeneration(Organisation orgnisation, Map<Long, WaterBillGenErrorDTO> errorListMap,
	    List<TbCsmrInfoDTO> entitylist, String remarks, Long empId, int langId, List<Long> csIdn, String ipAddress, Long logLocId);

    List<TbBillMas> getBillMasByConnectionId(Long csIdn);
    
	WaterPenaltyDto calculateSurcharge(Organisation organisation, Long deptId, List<TbBillMas> billMasList, 
			TbTaxMas taxMas, Long finYearId, TbCsmrInfoDTO csmrInfoDto, String ipAddress, Long userId,String billGenFlag,Date manualReceiptDate);
	
	List<WaterPenaltyDto> calculateSurcharge(Organisation organisation, Long deptId, List<TbBillMas> billMasList,
			TbTaxMas taxMas, Long finYearId, TbCsmrInfoDTO csmrInfoDto, String ipAddress, Long userId,String billGenFlag,Date manualReceiptDate, List<WaterPenaltyDto> surchargeList);

    WaterBillTaxDTO fetchSurCharge(Organisation org, Long deptId, double arrearAmt, TbTaxMas taxMas,
	    TbCsmrInfoDTO csmrInfoDto,int noOfMonthSurcharge);
    
    void savePortalSurchargeData(WaterBillRequestDTO requestDto, Long finYearId);
    
    public List<TbBillMas> getArrearsDeletionBills(Long csIdn, Long finYearId);
    
    List<TbBillMas> getArrearsDeletionBillsForNonCurrFinYear(Long csIdn, Long finYearId,String billFrequency, Long orgId,Long billNo);
    
	void deleteArrearInDetByBmId(List<TbBillMas> billMasList, String ipAddress, Long empId);
	
	List<TbBillMas> getArrearsDeletionBillsByGreaterAndEqualfinId(Long csIdn, Long finYearId, Long orgId);
	
	BillTaxDTO getRebateAmountForPaymentByCnTyp(TbCsmrInfoDTO dto, TbBillMas watertax, Organisation organisation,Date manualDate);

	Map<Long, WaterBillPrintSkdclDTO> printBillSkdcl(
			Map<Long, WaterBillPrintSkdclDTO> billMasPrint, Organisation organisation,
			List<String> billIds, String meterType, FileNetApplicationClient fileNetApplicationClient,
			List<TbTaxMas> taxesMaster, Long applicationNo);

	List<Long> getFinYearListFromLastBillGenDate(List<TbWtBillMasEntity> billList, TbWtBillMasEntity billmas,
			Long finYearId);

	WaterBillPrintSkdclDTO setBillDataInDTO(List<Object[]> billMasList, Organisation organisation,
			Map<Long, WaterBillPrintSkdclDTO> billMasPrint, List<TbBillDet> billDetList, List<String> billIds,
			List<Long> connectionIds, Long surchargeTaxId);

	List<TbBillDet> getBillDetailEntity(List<Long> billPrintIds, long orgid);

	public List<TbBillMas> getUnpaidBillEntityToDto(List<TbWtBillMasEntity> customCycleWiseBills);

	Map<String, WaterBillPrintSkdclDTO> printDuplicateBill(Organisation organisation, Long csIdn, Long bmIdno, String selectedBillNo);

	Boolean isBillUpToDateForGivenFinYear(List<TbWtBillMasEntity> billList, Long finYearId, Long meterType);

	WaterPenaltyDto calculateSurchargePSCL(Organisation organisation, Long deptId, List<TbBillMas> billMasList,
			TbTaxMas taxMas, Long finYearId, TbCsmrInfoDTO csmrInfoDto, String ipAddress, Long userId,
			String billGenFlag, Date manualReceiptDate);

}
