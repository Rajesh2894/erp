/*
 * Created on 10 May 2016 ( Time 16:43:02 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.water.mapper;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.domain.TbComparamDetEntity;
import com.abm.mainet.common.utility.AbstractServiceMapper;
import com.abm.mainet.water.domain.TbKCsmrInfoMH;
import com.abm.mainet.water.domain.TbMrdataEntity;
import com.abm.mainet.water.dto.MeterReadingDTO;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TbMrdataServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private final ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public TbMrdataServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'TbMrdataEntity' to 'TbMrdata'
     * @param tbMrdataEntity
     */
    public MeterReadingDTO mapTbMrdataEntityToTbMrdata(final TbMrdataEntity tbMrdataEntity) {
        if (tbMrdataEntity == null) {
            return null;
        }

        // --- Generic mapping
        final MeterReadingDTO tbMrdata = map(tbMrdataEntity, MeterReadingDTO.class);

        // --- Link mapping ( link to TbComparamDet )
        if (tbMrdataEntity.getTbComparamDet() != null) {
            tbMrdata.setCpdGap(tbMrdataEntity.getTbComparamDet().getCpdId());
        }
        // --- Link mapping ( link to TbCsmrInfo )
        if (tbMrdataEntity.getTbCsmrInfo() != null) {
            tbMrdata.setCsIdn(tbMrdataEntity.getTbCsmrInfo().getCsIdn());
        }
        // --- Link mapping ( link to TbComparamDet )
        if (tbMrdataEntity.getTbComparamDet2() != null) {
            tbMrdata.setCpdMtrstatus(tbMrdataEntity.getTbComparamDet2().getCpdId());
        }
        return tbMrdata;
    }

    /**
     * Mapping from 'TbMrdata' to 'TbMrdataEntity'
     * @param tbMrdata
     * @param tbMrdataEntity
     */
    public void mapTbMrdataToTbMrdataEntity(final MeterReadingDTO tbMrdata, final TbMrdataEntity tbMrdataEntity) {
        if (tbMrdata == null) {
            return;
        }

        // --- Generic mapping
        map(tbMrdata, tbMrdataEntity);

        // --- Link mapping ( link : tbMrdata )
        if (hasLinkToTbComparamDet(tbMrdata)) {
            final TbComparamDetEntity tbComparamDet1 = new TbComparamDetEntity();
            tbComparamDet1.setCpdId(tbMrdata.getCpdGap());
            tbMrdataEntity.setTbComparamDet(tbComparamDet1);
        } else {
            tbMrdataEntity.setTbComparamDet(null);
        }

        // --- Link mapping ( link : tbMrdata )
        if (hasLinkToTbCsmrInfo(tbMrdata)) {
            final TbKCsmrInfoMH tbCsmrInfo2 = new TbKCsmrInfoMH();
            tbCsmrInfo2.setCsIdn(tbMrdata.getCsIdn());
            tbMrdataEntity.setTbCsmrInfo(tbCsmrInfo2);
        } else {
            tbMrdataEntity.setTbCsmrInfo(null);
        }

        // --- Link mapping ( link : tbMrdata )
        if (hasLinkToTbComparamDet(tbMrdata)) {
            final TbComparamDetEntity tbComparamDet3 = new TbComparamDetEntity();
            tbComparamDet3.setCpdId(tbMrdata.getCpdMtrstatus());
            tbMrdataEntity.setTbComparamDet2(tbComparamDet3);
        } else {
            tbMrdataEntity.setTbComparamDet2(null);
        }

    }

    /**
     * Verify that TbComparamDet id is valid.
     * @param TbComparamDet TbComparamDet
     * @return boolean
     */
    private boolean hasLinkToTbComparamDet(final MeterReadingDTO tbMrdata) {
        if (tbMrdata.getCpdGap() != null) {
            return true;
        }
        return false;
    }

    /**
     * Verify that TbCsmrInfo id is valid.
     * @param TbCsmrInfo TbCsmrInfo
     * @return boolean
     */
    private boolean hasLinkToTbCsmrInfo(final MeterReadingDTO tbMrdata) {
        if (tbMrdata.getCsIdn() != null) {
            return true;
        }
        return false;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }
}