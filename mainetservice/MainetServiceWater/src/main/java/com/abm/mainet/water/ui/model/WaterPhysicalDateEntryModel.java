/*
 * Created on 10 May 2016 ( Time 19:15:26 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.water.ui.model;

import java.util.Calendar;
import java.util.Date;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.domain.TbCfcApplicationMstEntity;
import com.abm.mainet.common.service.ICFCApplicationMasterService;
import com.abm.mainet.common.ui.model.AbstractFormModel;
import com.abm.mainet.common.utility.ApplicationSession;
import com.abm.mainet.common.utility.UserSession;
import com.abm.mainet.common.utility.UtilityService;
import com.abm.mainet.water.domain.TbKCsmrInfoMH;
import com.abm.mainet.water.dto.PhysicalDateEntryDTO;
import com.abm.mainet.water.service.PhysicalDateEntryService;

@Component
@Scope("session")
public class WaterPhysicalDateEntryModel extends AbstractFormModel {

	private static final String WATER_VALID_PHY_DT = "water.valid.phyDt";

	private static final String WATER_SAVED_MSG = "water.saved.msg";

	private static final String SUCCESS = "water.newWaterConnection.success";

	private static final long serialVersionUID = 1L;

	private PhysicalDateEntryDTO entity = new PhysicalDateEntryDTO();
	
	private TbKCsmrInfoMH infoDto = new TbKCsmrInfoMH();

	@Resource
	private PhysicalDateEntryService tbCsmrInfoService;

	@Autowired
	private ICFCApplicationMasterService icfcApplicationMasterService;

	@Override
	public void editForm(final long rowId) {

		final TbCfcApplicationMstEntity appMasEntity = icfcApplicationMasterService
				.getCFCApplicationByApplicationId(rowId, UserSession.getCurrent().getOrganisation().getOrgid());

		final PhysicalDateEntryDTO entity = new PhysicalDateEntryDTO();
		entity.setServiceId(appMasEntity.getTbServicesMst().getSmServiceId());
		entity.setServiceName(appMasEntity.getTbServicesMst().getSmServiceName());
		entity.setApplicantName(appMasEntity.getApmFname());
		entity.setApplicationNumber(appMasEntity.getApmApplicationId());
		entity.setApplicationDate(appMasEntity.getApmApplicationDate());
		setEntity(entity);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.abm.mainet.common.ui.model.AbstractFormModel#saveForm()
	 */
	@Override
	public boolean saveForm() {
		if ((getEntity().getPhysicalConnFlag() == null) || (getEntity().getConnectionDate() == null)) {
			addValidationError(getAppSession().getMessage(WATER_VALID_PHY_DT));
		} else {
			final Calendar appDate = Calendar.getInstance();
			appDate.setTime(getEntity().getApplicationDate());
			appDate.set(Calendar.HOUR_OF_DAY, 0);
			appDate.set(Calendar.MINUTE, 0);
			appDate.set(Calendar.SECOND, 0);
			if (!UtilityService.compareDate(appDate.getTime(), getEntity().getConnectionDate())) {
				addValidationError(getAppSession().getMessage("phy.appdate"));
			} else if (!UtilityService.compareDate(getEntity().getConnectionDate(), new Date())) {
				addValidationError(getAppSession().getMessage("phy.currDate"));
			}
		}
		if (getBindingResult().hasErrors()) {
			return false;
		}

		final TbKCsmrInfoMH result = tbCsmrInfoService.saveFormData(getEntity(),
				UserSession.getCurrent().getOrganisation().getOrgid());
		setInfoDto(result);
		setSuccessMessage(ApplicationSession.getInstance().getMessage(SUCCESS +" "+ result.getCsCcn()));
		this.getSuccessMessage();
		return true;
	}

	/**
	 * @return the entity
	 */
	public PhysicalDateEntryDTO getEntity() {
		return entity;
	}

	/**
	 * @param entity
	 *            the entity to set
	 */
	public void setEntity(final PhysicalDateEntryDTO entity) {
		this.entity = entity;
	}

	public TbKCsmrInfoMH getInfoDto() {
		return infoDto;
	}

	public void setInfoDto(TbKCsmrInfoMH infoDto) {
		this.infoDto = infoDto;
	}

}
