package com.abm.mainet.common.domain;

// Generated Oct 29, 2012 2:31:43 PM by Hibernate Tools 3.4.0.CR1

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.GenericGenerator;

/**
 * Department generated by hbm2java
 */
@Entity
@Table(name = "TB_DEPARTMENT", uniqueConstraints = @UniqueConstraint(columnNames = "DP_DEPTCODE"))
public class Department implements Serializable, Cloneable {
    private static final long serialVersionUID = 1L;

    private Long dpDeptid;
    private String dpDeptcode;
    private String dpDeptdesc;
    private Integer userId;
    private Short langId;
    private Date lmoddate;
    private String status;
    private String dpNameMar;
    private String subDeptFlg;
    private Integer updatedBy;
    private Date updatedDate;
    private Long dpSmfid;
    private String dpCheck;
    private String dpPrefix;
    private String lgIpMac;
    private String lgIpMacUpd;
    private List<DeptOrgMap> deptOrgMaps = new ArrayList<>(0);

    public Department() {
    }

    @Id
    @GenericGenerator(name = "MyCustomGenerator", strategy = "com.abm.mainet.common.utility.SequenceIdGenerator")
    @GeneratedValue(generator = "MyCustomGenerator")
    @Column(name = "DP_DEPTID", nullable = false, precision = 12, scale = 0)
    public Long getDpDeptid() {
        return dpDeptid;
    }

    public void setDpDeptid(final Long dpDeptid) {
        this.dpDeptid = dpDeptid;
    }

    @Column(name = "DP_DEPTCODE", length = 8)
    public String getDpDeptcode() {
        return dpDeptcode;
    }

    public void setDpDeptcode(final String dpDeptcode) {
        this.dpDeptcode = dpDeptcode;
    }

    @Column(name = "DP_DEPTDESC", length = 800)
    public String getDpDeptdesc() {
        return dpDeptdesc;
    }

    public void setDpDeptdesc(final String dpDeptdesc) {
        this.dpDeptdesc = dpDeptdesc;
    }

    @Column(name = "USER_ID", nullable = false, precision = 7, scale = 0)
    public int getUserId() {
        return userId;
    }

    public void setUserId(final int userId) {
        this.userId = userId;
    }

    @Column(name = "LANG_ID", nullable = false, precision = 4, scale = 0)
    public Short getLangId() {
        return langId;
    }

    public void setLangId(final Short langId) {
        this.langId = langId;
    }

    @Column(name = "LMODDATE", nullable = false)
    public Date getLmoddate() {
        return lmoddate;
    }

    public void setLmoddate(final Date lmoddate) {
        this.lmoddate = lmoddate;
    }

    @Column(name = "STATUS", length = 2)
    public String getStatus() {
        return status;
    }

    public void setStatus(final String status) {
        this.status = status;
    }

    @Column(name = "DP_NAME_MAR", length = 4000)
    public String getDpNameMar() {
        return dpNameMar;
    }

    public void setDpNameMar(final String dpNameMar) {
        this.dpNameMar = dpNameMar;
    }

    @Column(name = "SUB_DEPT_FLG", length = 1)
    public String getSubDeptFlg() {
        return subDeptFlg;
    }

    public void setSubDeptFlg(final String subDeptFlg) {
        this.subDeptFlg = subDeptFlg;
    }

    @Column(name = "UPDATED_BY", precision = 7, scale = 0)
    public Integer getUpdatedBy() {
        return updatedBy;
    }

    public void setUpdatedBy(final Integer updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Column(name = "UPDATED_DATE")
    public Date getUpdatedDate() {
        return updatedDate;
    }

    public void setUpdatedDate(final Date updatedDate) {
        this.updatedDate = updatedDate;
    }

    @Column(name = "DP_SMFID", precision = 12, scale = 0)
    public Long getDpSmfid() {
        return dpSmfid;
    }

    public void setDpSmfid(final Long dpSmfid) {
        this.dpSmfid = dpSmfid;
    }

    @Column(name = "DP_CHECK", length = 2)
    public String getDpCheck() {
        return dpCheck;
    }

    public void setDpCheck(final String dpCheck) {
        this.dpCheck = dpCheck;
    }

    @Column(name = "DP_PREFIX", length = 6)
    public String getDpPrefix() {
        return dpPrefix;
    }

    public void setDpPrefix(final String dpPrefix) {
        this.dpPrefix = dpPrefix;
    }

    @Column(name = "LG_IP_MAC", length = 100)
    public String getLgIpMac() {
        return lgIpMac;
    }

    public void setLgIpMac(final String lgIpMac) {
        this.lgIpMac = lgIpMac;
    }

    @Column(name = "LG_IP_MAC_UPD", length = 100)
    public String getLgIpMacUpd() {
        return lgIpMacUpd;
    }

    public void setLgIpMacUpd(final String lgIpMacUpd) {
        this.lgIpMacUpd = lgIpMacUpd;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "department", cascade = CascadeType.ALL)
    public List<DeptOrgMap> getDeptOrgMaps() {
        return deptOrgMaps;
    }

    public void setDeptOrgMaps(final List<DeptOrgMap> deptOrgMaps) {
        this.deptOrgMaps = deptOrgMaps;
    }

    /*
     * (non-Javadoc)
     * @see java.lang.Object#clone()
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    @Transient
    public String[] getPkValues() {
        return new String[] { "AUT", "TB_DEPARTMENT", "DP_DEPTID" };
    }
}
