/*
 * Created on 27 Jul 2015 ( Time 17:56:33 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.mapper;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.domain.Department;
import com.abm.mainet.common.domain.DeptOrgMap;
import com.abm.mainet.common.master.dto.TbDeporgMap;
import com.abm.mainet.common.utility.AbstractServiceMapper;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TbDeporgMapServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public TbDeporgMapServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'TbDeporgMapEntity' to 'TbDeporgMap'
     * @param tbDeporgMapEntity
     */
    public TbDeporgMap mapTbDeporgMapEntityToTbDeporgMap(final DeptOrgMap tbDeporgMapEntity) {
        if (tbDeporgMapEntity == null) {
            return null;
        }

        // --- Generic mapping
        final TbDeporgMap tbDeporgMap = map(tbDeporgMapEntity, TbDeporgMap.class);

        // --- Link mapping ( link to TbDepartment )
        if (tbDeporgMapEntity.getDepartment() != null) {
            tbDeporgMap.setDpDeptid(tbDeporgMapEntity.getDepartment().getDpDeptid());
        }
        return tbDeporgMap;
    }

    /**
     * Mapping from 'TbDeporgMap' to 'TbDeporgMapEntity'
     * @param tbDeporgMap
     * @param tbDeporgMapEntity
     */
    public void mapTbDeporgMapToTbDeporgMapEntity(final TbDeporgMap tbDeporgMap, final DeptOrgMap tbDeporgMapEntity) {
        if (tbDeporgMap == null) {
            return;
        }

        // --- Generic mapping
        map(tbDeporgMap, tbDeporgMapEntity);

        // --- Link mapping ( link : tbDeporgMap )
        if (hasLinkToTbDepartment(tbDeporgMap)) {
            final Department tbDepartment1 = new Department();
            tbDepartment1.setDpDeptid(tbDeporgMap.getDpDeptid());
            tbDeporgMapEntity.setDepartment(tbDepartment1);
        } else {
            tbDeporgMapEntity.setDepartment(null);
        }

    }

    /**
     * Verify that TbDepartment id is valid.
     * @param TbDepartment TbDepartment
     * @return boolean
     */
    private boolean hasLinkToTbDepartment(final TbDeporgMap tbDeporgMap) {
        if (tbDeporgMap.getDpDeptid() != null) {
            return true;
        }
        return false;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(final ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}