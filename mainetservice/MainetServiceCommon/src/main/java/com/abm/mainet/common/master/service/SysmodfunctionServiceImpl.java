/*
 * Created on 28 Jul 2015 ( Time 18:00:15 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.service;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.abm.mainet.common.domain.SystemModuleFunction;
import com.abm.mainet.common.master.dto.Sysmodfunction;
import com.abm.mainet.common.master.mapper.SysmodfunctionServiceMapper;
import com.abm.mainet.common.master.repository.SysmodfunctionJpaRepository;

/**
 * Implementation of SysmodfunctionService
 */
@Component
public class SysmodfunctionServiceImpl implements SysmodfunctionService {

	@Resource
	private SysmodfunctionJpaRepository sysmodfunctionJpaRepository;

	@Resource
	private SysmodfunctionServiceMapper sysmodfunctionServiceMapper;

	@Override
	@Transactional
	public Sysmodfunction findById(final Long smfid) {
		final SystemModuleFunction sysmodfunctionEntity = sysmodfunctionJpaRepository.findOne(smfid);
		return sysmodfunctionServiceMapper.mapSysmodfunctionEntityToSysmodfunction(sysmodfunctionEntity);
	}

	@Override
	@Transactional
	public List<Sysmodfunction> findAll() {
		final Iterable<SystemModuleFunction> entities = sysmodfunctionJpaRepository.findAll();
		final List<Sysmodfunction> beans = new ArrayList<>();
		for (final SystemModuleFunction sysmodfunctionEntity : entities) {
			beans.add(sysmodfunctionServiceMapper.mapSysmodfunctionEntityToSysmodfunction(sysmodfunctionEntity));
		}
		return beans;
	}

	@Override
	@Transactional
	public Sysmodfunction save(final Sysmodfunction sysmodfunction) {
		return update(sysmodfunction);
	}

	@Override
	@Transactional
	public Sysmodfunction create(final Sysmodfunction sysmodfunction) {
		SystemModuleFunction sysmodfunctionEntity = sysmodfunctionJpaRepository.findOne(sysmodfunction.getSmfid());
		if (sysmodfunctionEntity != null) {
			throw new IllegalStateException("already.exists");
		}
		sysmodfunctionEntity = new SystemModuleFunction();
		sysmodfunctionServiceMapper.mapSysmodfunctionToSysmodfunctionEntity(sysmodfunction, sysmodfunctionEntity);
		final SystemModuleFunction sysmodfunctionEntitySaved = sysmodfunctionJpaRepository.save(sysmodfunctionEntity);
		return sysmodfunctionServiceMapper.mapSysmodfunctionEntityToSysmodfunction(sysmodfunctionEntitySaved);
	}

	@Override
	@Transactional
	public Sysmodfunction update(final Sysmodfunction sysmodfunction) {
		final SystemModuleFunction sysmodfunctionEntity = sysmodfunctionJpaRepository
				.findOne(sysmodfunction.getSmfid());
		sysmodfunctionServiceMapper.mapSysmodfunctionToSysmodfunctionEntity(sysmodfunction, sysmodfunctionEntity);
		final SystemModuleFunction sysmodfunctionEntitySaved = sysmodfunctionJpaRepository.save(sysmodfunctionEntity);
		return sysmodfunctionServiceMapper.mapSysmodfunctionEntityToSysmodfunction(sysmodfunctionEntitySaved);
	}

	@Override
	@Transactional
	public void delete(final Long smfid) {
		sysmodfunctionJpaRepository.delete(smfid);
	}

	public SysmodfunctionJpaRepository getSysmodfunctionJpaRepository() {
		return sysmodfunctionJpaRepository;
	}

	public void setSysmodfunctionJpaRepository(final SysmodfunctionJpaRepository sysmodfunctionJpaRepository) {
		this.sysmodfunctionJpaRepository = sysmodfunctionJpaRepository;
	}

	public SysmodfunctionServiceMapper getSysmodfunctionServiceMapper() {
		return sysmodfunctionServiceMapper;
	}

	public void setSysmodfunctionServiceMapper(final SysmodfunctionServiceMapper sysmodfunctionServiceMapper) {
		this.sysmodfunctionServiceMapper = sysmodfunctionServiceMapper;
	}

	@Override
	@Transactional
	public List<Sysmodfunction> findAllMappingMenu() {

		final List<SystemModuleFunction> entities = sysmodfunctionJpaRepository.findAllMappingMenu();
		final List<Sysmodfunction> beans = new ArrayList<>();
		for (final SystemModuleFunction sysmodfunctionEntity : entities) {
			beans.add(sysmodfunctionServiceMapper.mapSysmodfunctionEntityToSysmodfunction(sysmodfunctionEntity));
		}
		return beans;
	}

	@Override
	@Transactional
	public List<SystemModuleFunction> findBySmfaction(final String smfaction, final String smfname) {
		final List<SystemModuleFunction> systemModList = sysmodfunctionJpaRepository.findBySmfaction(smfaction,
				smfname);
		return systemModList;
	}

	// US#34043
	@Override
	@Transactional
	public Long findSmfIdBySmfaction(final String smfaction) {
		final Long smfId = sysmodfunctionJpaRepository.findSmfIdBySmfaction(smfaction);
		return smfId;
	}

}
