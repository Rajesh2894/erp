/*
 * Created on 6 Apr 2016 ( Time 17:23:20 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite)

package com.abm.mainet.common.domain;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;

/**
 * Persistent class for entity stored in table "TB_ORG_DESIGNATION"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name = "TB_ORG_DESIGNATION")
// Define named queries here
@NamedQueries({
        @NamedQuery(name = "TbOrgDesignationEntity.countAll", query = "SELECT COUNT(x) FROM TbOrgDesignationEntity x")
})
public class TbOrgDesignationEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    // ----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    // ----------------------------------------------------------------------
    @Id
    @GenericGenerator(name = "MyCustomGenerator", strategy = "com.abm.mainet.common.utility.SequenceIdGenerator")
    @GeneratedValue(generator = "MyCustomGenerator")
    @Column(name = "MAP_ID", nullable = false)
    private Long mapId;

    // ----------------------------------------------------------------------
    // ENTITY DATA FIELDS
    // ----------------------------------------------------------------------
    @Column(name = "MAP_STATUS", length = 1)
    private String mapStatus;

    @Column(name = "USER_ID", nullable = false)
    private Long userId;

    @Column(name = "LANG_ID", nullable = false)
    private Long langId;

    @Temporal(TemporalType.DATE)
    @Column(name = "LMODDATE", nullable = false)
    private Date lmoddate;

    @Column(name = "UPDATED_BY")
    private Long updatedBy;

    @Temporal(TemporalType.DATE)
    @Column(name = "UPDATED_DATE")
    private Date updatedDate;

    @Column(name = "LG_IP_MAC", length = 100)
    private String lgIpMac;

    @Column(name = "LG_IP_MAC_UPD", length = 100)
    private String lgIpMacUpd;

    @Column(name = "COM_V1")
    private String comV1;

    @Column(name = "COM_V2")
    private String comV2;

    @Column(name = "COM_V3")
    private String comV3;

    @Column(name = "COM_V4")
    private String comV4;

    @Column(name = "COM_V5")
    private String comV5;

    @Column(name = "COM_N1")
    private Long comN1;

    @Column(name = "COM_N2")
    private Long comN2;

    @Column(name = "COM_N3")
    private Long comN3;

    @Column(name = "COM_N4")
    private Long comN4;

    @Column(name = "COM_N5")
    private Long comN5;

    @Temporal(TemporalType.DATE)
    @Column(name = "COM_D1")
    private Date comD1;

    @Temporal(TemporalType.DATE)
    @Column(name = "COM_D2")
    private Date comD2;

    @Temporal(TemporalType.DATE)
    @Column(name = "COM_D3")
    private Date comD3;

    @Column(name = "COM_LO1", length = 1)
    private String comLo1;

    @Column(name = "COM_LO2", length = 1)
    private String comLo2;

    @Column(name = "COM_LO3", length = 1)
    private String comLo3;

    // ----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    // ----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name = "ORGID", referencedColumnName = "ORGID")
    private Organisation tbOrganisation;

    @ManyToOne
    @JoinColumn(name = "DSGID", referencedColumnName = "DSGID")
    private Designation designation;

    // ----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    // ----------------------------------------------------------------------
    public TbOrgDesignationEntity() {
        super();
    }

    // ----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    // ----------------------------------------------------------------------
    public void setMapId(final Long mapId) {
        this.mapId = mapId;
    }

    public Long getMapId() {
        return mapId;
    }

    // ----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    // ----------------------------------------------------------------------
    // --- DATABASE MAPPING : MAP_STATUS ( CHAR )
    public void setMapStatus(final String mapStatus) {
        this.mapStatus = mapStatus;
    }

    public String getMapStatus() {
        return mapStatus;
    }

    // --- DATABASE MAPPING : USER_ID ( NUMBER )
    public void setUserId(final Long userId) {
        this.userId = userId;
    }

    public Long getUserId() {
        return userId;
    }

    // --- DATABASE MAPPING : LANG_ID ( NUMBER )
    public void setLangId(final Long langId) {
        this.langId = langId;
    }

    public Long getLangId() {
        return langId;
    }

    // --- DATABASE MAPPING : LMODDATE ( DATE )
    public void setLmoddate(final Date lmoddate) {
        this.lmoddate = lmoddate;
    }

    public Date getLmoddate() {
        return lmoddate;
    }

    // --- DATABASE MAPPING : UPDATED_BY ( NUMBER )
    public void setUpdatedBy(final Long updatedBy) {
        this.updatedBy = updatedBy;
    }

    public Long getUpdatedBy() {
        return updatedBy;
    }

    // --- DATABASE MAPPING : UPDATED_DATE ( DATE )
    public void setUpdatedDate(final Date updatedDate) {
        this.updatedDate = updatedDate;
    }

    public Date getUpdatedDate() {
        return updatedDate;
    }

    // --- DATABASE MAPPING : LG_IP_MAC ( VARCHAR2 )
    public void setLgIpMac(final String lgIpMac) {
        this.lgIpMac = lgIpMac;
    }

    public String getLgIpMac() {
        return lgIpMac;
    }

    // --- DATABASE MAPPING : LG_IP_MAC_UPD ( VARCHAR2 )
    public void setLgIpMacUpd(final String lgIpMacUpd) {
        this.lgIpMacUpd = lgIpMacUpd;
    }

    public String getLgIpMacUpd() {
        return lgIpMacUpd;
    }

    // --- DATABASE MAPPING : COM_V1 ( NVARCHAR2 )
    public void setComV1(final String comV1) {
        this.comV1 = comV1;
    }

    public String getComV1() {
        return comV1;
    }

    // --- DATABASE MAPPING : COM_V2 ( NVARCHAR2 )
    public void setComV2(final String comV2) {
        this.comV2 = comV2;
    }

    public String getComV2() {
        return comV2;
    }

    // --- DATABASE MAPPING : COM_V3 ( NVARCHAR2 )
    public void setComV3(final String comV3) {
        this.comV3 = comV3;
    }

    public String getComV3() {
        return comV3;
    }

    // --- DATABASE MAPPING : COM_V4 ( NVARCHAR2 )
    public void setComV4(final String comV4) {
        this.comV4 = comV4;
    }

    public String getComV4() {
        return comV4;
    }

    // --- DATABASE MAPPING : COM_V5 ( NVARCHAR2 )
    public void setComV5(final String comV5) {
        this.comV5 = comV5;
    }

    public String getComV5() {
        return comV5;
    }

    // --- DATABASE MAPPING : COM_N1 ( NUMBER )
    public void setComN1(final Long comN1) {
        this.comN1 = comN1;
    }

    public Long getComN1() {
        return comN1;
    }

    // --- DATABASE MAPPING : COM_N2 ( NUMBER )
    public void setComN2(final Long comN2) {
        this.comN2 = comN2;
    }

    public Long getComN2() {
        return comN2;
    }

    // --- DATABASE MAPPING : COM_N3 ( NUMBER )
    public void setComN3(final Long comN3) {
        this.comN3 = comN3;
    }

    public Long getComN3() {
        return comN3;
    }

    // --- DATABASE MAPPING : COM_N4 ( NUMBER )
    public void setComN4(final Long comN4) {
        this.comN4 = comN4;
    }

    public Long getComN4() {
        return comN4;
    }

    // --- DATABASE MAPPING : COM_N5 ( NUMBER )
    public void setComN5(final Long comN5) {
        this.comN5 = comN5;
    }

    public Long getComN5() {
        return comN5;
    }

    // --- DATABASE MAPPING : COM_D1 ( DATE )
    public void setComD1(final Date comD1) {
        this.comD1 = comD1;
    }

    public Date getComD1() {
        return comD1;
    }

    // --- DATABASE MAPPING : COM_D2 ( DATE )
    public void setComD2(final Date comD2) {
        this.comD2 = comD2;
    }

    public Date getComD2() {
        return comD2;
    }

    // --- DATABASE MAPPING : COM_D3 ( DATE )
    public void setComD3(final Date comD3) {
        this.comD3 = comD3;
    }

    public Date getComD3() {
        return comD3;
    }

    // --- DATABASE MAPPING : COM_LO1 ( CHAR )
    public void setComLo1(final String comLo1) {
        this.comLo1 = comLo1;
    }

    public String getComLo1() {
        return comLo1;
    }

    // --- DATABASE MAPPING : COM_LO2 ( CHAR )
    public void setComLo2(final String comLo2) {
        this.comLo2 = comLo2;
    }

    public String getComLo2() {
        return comLo2;
    }

    // --- DATABASE MAPPING : COM_LO3 ( CHAR )
    public void setComLo3(final String comLo3) {
        this.comLo3 = comLo3;
    }

    public String getComLo3() {
        return comLo3;
    }

    // ----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    // ----------------------------------------------------------------------
    public void setTbOrganisation(final Organisation tbOrganisation) {
        this.tbOrganisation = tbOrganisation;
    }

    public Organisation getTbOrganisation() {
        return tbOrganisation;
    }

    public void setDesignation(final Designation designation) {
        this.designation = designation;
    }

    public Designation getDesignation() {
        return designation;
    }

    // ----------------------------------------------------------------------
    // toString METHOD
    // ----------------------------------------------------------------------
    @Override
    public String toString() {
        final StringBuffer sb = new StringBuffer();
        sb.append("[");
        sb.append(mapId);
        sb.append("]:");
        sb.append(mapStatus);
        sb.append("|");
        sb.append(userId);
        sb.append("|");
        sb.append(langId);
        sb.append("|");
        sb.append(lmoddate);
        sb.append("|");
        sb.append(updatedBy);
        sb.append("|");
        sb.append(updatedDate);
        sb.append("|");
        sb.append(lgIpMac);
        sb.append("|");
        sb.append(lgIpMacUpd);
        sb.append("|");
        sb.append(comV1);
        sb.append("|");
        sb.append(comV2);
        sb.append("|");
        sb.append(comV3);
        sb.append("|");
        sb.append(comV4);
        sb.append("|");
        sb.append(comV5);
        sb.append("|");
        sb.append(comN1);
        sb.append("|");
        sb.append(comN2);
        sb.append("|");
        sb.append(comN3);
        sb.append("|");
        sb.append(comN4);
        sb.append("|");
        sb.append(comN5);
        sb.append("|");
        sb.append(comD1);
        sb.append("|");
        sb.append(comD2);
        sb.append("|");
        sb.append(comD3);
        sb.append("|");
        sb.append(comLo1);
        sb.append("|");
        sb.append(comLo2);
        sb.append("|");
        sb.append(comLo3);
        return sb.toString();
    }

    public String[] getPkValues() {
        return new String[] { "COM", "TB_ORG_DESIGNATION", "MAP_ID" };
    }
}
