/*
 * Created on 6 Jun 2016 ( Time 15:53:28 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.integration.acccount.mapper;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.integration.acccount.domain.AccountFieldMasterEntity;
import com.abm.mainet.common.integration.acccount.domain.TbAcCodingstructureDetEntity;
import com.abm.mainet.common.integration.acccount.dto.AccountFieldMasterBean;
import com.abm.mainet.common.utility.AbstractServiceMapper;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TbAcFieldMasterServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public TbAcFieldMasterServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'TbAcFieldMasterEntity' to 'TbAcFieldMaster'
     *
     * @param tbAcFieldMasterEntity
     */
    public AccountFieldMasterBean mapTbAcFieldMasterEntityToTbAcFieldMaster(
            final AccountFieldMasterEntity tbAcFieldMasterEntity, final Boolean isparent) {
        if (tbAcFieldMasterEntity == null) {
            return null;
        }

        // --- Generic mapping
        final AccountFieldMasterBean tbAcFieldMaster = new AccountFieldMasterBean();
        tbAcFieldMaster.setFieldId(tbAcFieldMasterEntity.getFieldId());
        tbAcFieldMaster.setFieldCode(tbAcFieldMasterEntity.getFieldCode());
        tbAcFieldMaster.setFieldDesc(tbAcFieldMasterEntity.getFieldDesc());
        AccountFieldMasterBean fieldMasterBean = null;
        if (isparent) {
            tbAcFieldMaster.setFieldParentId(null);
        } else {
            fieldMasterBean = new AccountFieldMasterBean();
            map(tbAcFieldMasterEntity.getFieldParentId(), fieldMasterBean);
            tbAcFieldMaster.setFieldParentId(fieldMasterBean);
        }

        if (tbAcFieldMasterEntity.getFieldParentId() != null) {
            fieldMasterBean = new AccountFieldMasterBean();
            map(tbAcFieldMasterEntity.getFieldParentId(), fieldMasterBean);
            tbAcFieldMaster.setFieldParentId(fieldMasterBean);
            tbAcFieldMaster.setFieldCompcode(tbAcFieldMasterEntity.getFieldCompcode());
            tbAcFieldMaster.setOrgid(tbAcFieldMasterEntity.getFieldParentId().getOrgid());
        }

        // --- Link mapping ( link to TbAcCodingstructureDet )
        if (tbAcFieldMasterEntity.getTbAcCodingstructureDet() != null) {
            tbAcFieldMaster.setCodcofdetId(tbAcFieldMasterEntity.getTbAcCodingstructureDet().getCodcofdetId());
        }

        return tbAcFieldMaster;
    }

    /**
     * Mapping from 'TbAcFieldMaster' to 'TbAcFieldMasterEntity'
     *
     * @param tbAcFieldMaster
     * @param tbAcFieldMasterEntity
     */
    public void mapTbAcFieldMasterToTbAcFieldMasterEntity(final AccountFieldMasterBean tbAcFieldMaster,
            final AccountFieldMasterEntity tbAcFieldMasterEntity) {
        if (tbAcFieldMaster == null) {
            return;
        }

        // --- Generic mapping
        map(tbAcFieldMaster, tbAcFieldMasterEntity);

        // --- Link mapping ( link : tbAcFieldMaster )
        if (hasLinkToTbAcCodingstructureDet(tbAcFieldMaster)) {
            final TbAcCodingstructureDetEntity tbAcCodingstructureDet1 = new TbAcCodingstructureDetEntity();
            tbAcCodingstructureDet1.setCodcofdetId(tbAcFieldMaster.getCodcofdetId());
            tbAcFieldMasterEntity.setTbAcCodingstructureDet(tbAcCodingstructureDet1);
        } else {
            tbAcFieldMasterEntity.setTbAcCodingstructureDet(null);
        }

    }

    /**
     * Verify that TbAcCodingstructureDet id is valid.
     *
     * @param TbAcCodingstructureDet TbAcCodingstructureDet
     * @return boolean
     */
    private boolean hasLinkToTbAcCodingstructureDet(final AccountFieldMasterBean tbAcFieldMaster) {
        if (tbAcFieldMaster.getCodcofdetId() != null) {
            return true;
        }
        return false;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(final ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}