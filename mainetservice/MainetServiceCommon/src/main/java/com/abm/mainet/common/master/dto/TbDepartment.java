/*
 * Created on 27 Jul 2015 ( Time 17:55:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.dto;

import java.io.Serializable;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.validation.constraints.Size;

import com.abm.mainet.common.utility.UserSession;
import com.fasterxml.jackson.annotation.JsonIgnore;

public class TbDepartment implements Comparable<TbDepartment>, Serializable {

    private static final long serialVersionUID = 1L;

    // ----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    // ----------------------------------------------------------------------
    // @NotNull
    private Long dpDeptid;

    // ----------------------------------------------------------------------
    // ENTITY DATA FIELDS
    // ----------------------------------------------------------------------
    @Size(max = 4)
    private String dpDeptcode;

    @Size(max = 400)
    private String dpDeptdesc;

    // @NotNull
    private Long userId;

    // @NotNull
    private Long langId;

    // @NotNull
    private Date lmoddate;

    @Size(max = 1)
    private String status;

    @Size(max = 10)
    private String dpShortdesc;

    @Size(max = 2000)
    private String dpNameMar;

    @Size(max = 1)
    private String subDeptFlg;

    private Long updatedBy;

    private Date updatedDate;

    private Long dpSmfid;

    @Size(max = 1)
    private String dpCheck;

    @Size(max = 3)
    private String dpPrefix;

    @JsonIgnore
    @Size(max = 100)
    private String lgIpMac;

    @JsonIgnore
    @Size(max = 100)
    private String lgIpMacUpd;

    private Long cpdIdDcg;

    private String lmodDateStr;

    List<TbDeporgMap> TbDeporgMapList;
    
    private boolean activeChkBox;

    // ----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    // ----------------------------------------------------------------------
    public void setDpDeptid(final Long dpDeptid) {
        this.dpDeptid = dpDeptid;
    }

    public Long getDpDeptid() {
        return dpDeptid;
    }

    // ----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    // ----------------------------------------------------------------------
    public void setDpDeptcode(final String dpDeptcode) {
        this.dpDeptcode = dpDeptcode;
    }

    public String getDpDeptcode() {
        return dpDeptcode;
    }

    public void setDpDeptdesc(final String dpDeptdesc) {
        this.dpDeptdesc = dpDeptdesc;
    }

    public String getDpDeptdesc() {
        return dpDeptdesc;
    }

    public void setUserId(final Long userId) {
        this.userId = userId;
    }

    public Long getUserId() {
        return userId;
    }

    public void setLangId(final Long langId) {
        this.langId = langId;
    }

    public Long getLangId() {
        return langId;
    }

    public void setLmoddate(final Date lmoddate) {
        this.lmoddate = lmoddate;
    }

    public Date getLmoddate() {
        return lmoddate;
    }

    public void setStatus(final String status) {
        this.status = status;
    }

    public String getStatus() {
        return status;
    }

    public void setDpShortdesc(final String dpShortdesc) {
        this.dpShortdesc = dpShortdesc;
    }

    public String getDpShortdesc() {
        return dpShortdesc;
    }

    public void setDpNameMar(final String dpNameMar) {
        this.dpNameMar = dpNameMar;
    }

    public String getDpNameMar() {
        return dpNameMar;
    }

    public void setSubDeptFlg(final String subDeptFlg) {
        this.subDeptFlg = subDeptFlg;
    }

    public String getSubDeptFlg() {
        return subDeptFlg;
    }

    public void setUpdatedBy(final Long updatedBy) {
        this.updatedBy = updatedBy;
    }

    public Long getUpdatedBy() {
        return updatedBy;
    }

    public void setUpdatedDate(final Date updatedDate) {
        this.updatedDate = updatedDate;
    }

    public Date getUpdatedDate() {
        return updatedDate;
    }

    public void setDpSmfid(final Long dpSmfid) {
        this.dpSmfid = dpSmfid;
    }

    public Long getDpSmfid() {
        return dpSmfid;
    }

    public void setDpCheck(final String dpCheck) {
        this.dpCheck = dpCheck;
    }

    public String getDpCheck() {
        return dpCheck;
    }

    public void setDpPrefix(final String dpPrefix) {
        this.dpPrefix = dpPrefix;
    }

    public String getDpPrefix() {
        return dpPrefix;
    }

    public void setLgIpMac(final String lgIpMac) {
        this.lgIpMac = lgIpMac;
    }

    public String getLgIpMac() {
        return lgIpMac;
    }

    public void setLgIpMacUpd(final String lgIpMacUpd) {
        this.lgIpMacUpd = lgIpMacUpd;
    }

    public String getLgIpMacUpd() {
        return lgIpMacUpd;
    }

    public void setCpdIdDcg(final Long cpdIdDcg) {
        this.cpdIdDcg = cpdIdDcg;
    }

    public Long getCpdIdDcg() {
        return cpdIdDcg;
    }

    // ----------------------------------------------------------------------
    // toString METHOD
    // ----------------------------------------------------------------------

    public String getLmodDateStr() {

        if (lmoddate != null) {
            final Format formatter = new SimpleDateFormat("dd/MM/yyyy");
            lmodDateStr = formatter.format(lmoddate);
        } else {
            lmodDateStr = "";
        }
        return lmodDateStr;
    }

    public void setLmodDateStr(final String lmodDateStr) {
        this.lmodDateStr = lmodDateStr;
    }

    @Override
    public String toString() {
        final StringBuffer sb = new StringBuffer();
        sb.append(dpDeptid);
        sb.append("|");
        sb.append(dpDeptcode);
        sb.append("|");
        sb.append(dpDeptdesc);
        sb.append("|");
        sb.append(userId);
        sb.append("|");
        sb.append(langId);
        sb.append("|");
        sb.append(lmoddate);
        sb.append("|");
        sb.append(status);
        sb.append("|");
        sb.append(dpShortdesc);
        sb.append("|");
        sb.append(dpNameMar);
        sb.append("|");
        sb.append(subDeptFlg);
        sb.append("|");
        sb.append(updatedBy);
        sb.append("|");
        sb.append(updatedDate);
        sb.append("|");
        sb.append(dpSmfid);
        sb.append("|");
        sb.append(dpCheck);
        sb.append("|");
        sb.append(dpPrefix);
        sb.append("|");
        sb.append(lgIpMac);
        sb.append("|");
        sb.append(lgIpMacUpd);
        sb.append("|");
        sb.append(cpdIdDcg);
        return sb.toString();
    }

    public List<TbDeporgMap> getTbDeporgMapList() {
        return TbDeporgMapList;
    }

    public void setTbDeporgMapList(final List<TbDeporgMap> tbDeporgMapList) {
        TbDeporgMapList = tbDeporgMapList;
    }

    @Override
    public int compareTo(final TbDepartment paramT) {
        if (UserSession.getCurrent().getLanguageId() == 1) {
            return getDpDeptdesc().compareToIgnoreCase(paramT.getDpDeptdesc());
        } else {
            return getDpNameMar().compareToIgnoreCase(paramT.getDpNameMar());
        }
    }

	public boolean isActiveChkBox() {
		return activeChkBox;
	}

	public void setActiveChkBox(boolean activeChkBox) {
		this.activeChkBox = activeChkBox;
	}

}
