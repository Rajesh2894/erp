/*
 * Created on 27 Jul 2015 ( Time 17:56:33 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.mapper;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.domain.Department;
import com.abm.mainet.common.master.dto.TbDepartment;
import com.abm.mainet.common.utility.AbstractServiceMapper;
import com.abm.mainet.common.utility.UserSession;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TbDepartmentServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public TbDepartmentServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'TbDepartmentEntity' to 'TbDepartment'
     * @param tbDepartmentEntity
     */
    public TbDepartment mapTbDepartmentEntityToTbDepartment(final Department tbDepartmentEntity) {
        if (tbDepartmentEntity == null) {
            return null;
        }

        // --- Generic mapping
        final TbDepartment tbDepartment = map(tbDepartmentEntity, TbDepartment.class);

        
          if (tbDepartmentEntity.getDpDeptdesc() != null) {
          tbDepartment.setDpDeptid(tbDepartmentEntity.getDpDeptid());
          if (UserSession.getCurrent().getLanguageId() == 1) {
          tbDepartment.setDpDeptdesc(tbDepartmentEntity.getDpDeptdesc());
          } else {
          tbDepartment.setDpDeptdesc(tbDepartmentEntity.getDpNameMar());
          }
          }
         

        return tbDepartment;

    }

    /**
     * Mapping from 'TbDepartment' to 'TbDepartmentEntity'
     * @param tbDepartment
     * @param tbDepartmentEntity
     */
    public void mapTbDepartmentToTbDepartmentEntity(final TbDepartment tbDepartment, final Department tbDepartmentEntity) {
        if (tbDepartment == null) {
            return;
        }

        // --- Generic mapping
        map(tbDepartment, tbDepartmentEntity);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(final ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}