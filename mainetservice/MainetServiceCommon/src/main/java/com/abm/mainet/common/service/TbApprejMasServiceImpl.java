/*
 * Created on 6 Apr 2016 ( Time 11:38:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.service;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.constant.MainetConstants;
import com.abm.mainet.common.domain.TbApprejMasEntity;
import com.abm.mainet.common.domain.TbApprejMasEntityKey;
import com.abm.mainet.common.dto.TbApprejMas;
import com.abm.mainet.common.mapper.TbApprejMasServiceMapper;
import com.abm.mainet.common.repository.TbApprejMasJpaRepository;
import com.abm.mainet.common.utility.SeqGenFunctionUtility;
import com.abm.mainet.common.utility.UserSession;

/**
 * Implementation of TbApprejMasService
 */
@Component
public class TbApprejMasServiceImpl implements TbApprejMasService {

	@Resource
	private TbApprejMasJpaRepository tbApprejMasJpaRepository;

	@Resource
	private TbApprejMasServiceMapper tbApprejMasServiceMapper;

	@Autowired
	SeqGenFunctionUtility seqGenFunctionUtility;

	@Override
	public TbApprejMas findById(final Long artId, final Long orgid) {
		final TbApprejMasEntityKey id = new TbApprejMasEntityKey(artId, orgid);
		final TbApprejMasEntity tbApprejMasEntity = tbApprejMasJpaRepository.findOne(id);
		return tbApprejMasServiceMapper.mapTbApprejMasEntityToTbApprejMas(tbApprejMasEntity);
	}

	@Override
	public List<TbApprejMas> findByArtId(final List<Long> ArtId, final Long orgid) {

		final Iterable<TbApprejMasEntity> tbApprejMasEntity = tbApprejMasJpaRepository.findByArtId(ArtId, orgid);
		final List<TbApprejMas> beans = new ArrayList<>();
		for (final TbApprejMasEntity tbApprejMasEntity1 : tbApprejMasEntity) {
			beans.add(tbApprejMasServiceMapper.mapTbApprejMasEntityToTbApprejMas(tbApprejMasEntity1));
		}
		return beans;
	}

	@Override
	public List<TbApprejMas> findAll() {
		final Iterable<TbApprejMasEntity> entities = tbApprejMasJpaRepository.findAll();
		final List<TbApprejMas> beans = new ArrayList<>();
		for (final TbApprejMasEntity tbApprejMasEntity : entities) {
			beans.add(tbApprejMasServiceMapper.mapTbApprejMasEntityToTbApprejMas(tbApprejMasEntity));
		}
		return beans;
	}

	@Override
	public TbApprejMas create(final TbApprejMas tbApprejMas) {
		final TbApprejMasEntityKey id = new TbApprejMasEntityKey(tbApprejMas.getArtId(), tbApprejMas.getOrgid());
		TbApprejMasEntity tbApprejMasEntitySaved = null;

		TbApprejMasEntity tbApprejMasEntity = tbApprejMasJpaRepository.findOne(id);

		tbApprejMasEntity = new TbApprejMasEntity();

		tbApprejMasServiceMapper.mapTbApprejMasToTbApprejMasEntity(tbApprejMas, tbApprejMasEntity);

		tbApprejMasEntity.setOrgid(tbApprejMas.getOrgid());
		tbApprejMasEntity.setUserId(tbApprejMas.getUserId());
		tbApprejMasEntity.setLangId(tbApprejMas.getLangId());
		tbApprejMasEntity.setLmoddate(new Date());
		tbApprejMasEntity.setLgIpMac(tbApprejMas.getLgIpMac());
		tbApprejMasEntity.setLgIpMacUpd(tbApprejMas.getLgIpMacUpd());
		tbApprejMasEntity.setStatusflag(tbApprejMas.getStatusflag());
		final Map<String, String> map = new HashMap<>(); // ordered

		for (int i = 0; i < tbApprejMas.getRemarkList().size(); i++) {
			map.put(tbApprejMas.getRemarkList().get(i), tbApprejMas.getRemarkListreg().get(i)); // is there a clearer
																								// way?
		}
		if (!tbApprejMas.getRemarkList().isEmpty()) {
			for (final Map.Entry<String, String> entry : map.entrySet()) {
				final Long artId = seqGenFunctionUtility.generateSequenceNo("COM", "TB_APPREJ_MAS", "ART_TYPE",
						tbApprejMas.getOrgid(), null, null);
				tbApprejMasEntity.setArtId(artId);
				tbApprejMasEntity.setArtRemarks(entry.getKey());
				tbApprejMasEntity.setArtRemarksreg(entry.getValue());
				tbApprejMasEntitySaved = tbApprejMasJpaRepository.save(tbApprejMasEntity);
			}

		} else {
			tbApprejMasEntity.setArtRemarks(tbApprejMas.getArtRemarks());
			tbApprejMasEntitySaved = tbApprejMasJpaRepository.save(tbApprejMasEntity);
		}
		return tbApprejMasServiceMapper.mapTbApprejMasEntityToTbApprejMas(tbApprejMasEntitySaved);
	}

	@Override
	public TbApprejMas update(final TbApprejMas tbApprejMas) {
		final TbApprejMasEntityKey id = new TbApprejMasEntityKey(tbApprejMas.getArtId(), tbApprejMas.getOrgid());
		final TbApprejMasEntity tbApprejMasEntity = tbApprejMasJpaRepository.findOne(id);
		tbApprejMasEntity.setStatusflag("N");
		final TbApprejMasEntity tbApprejMasEntitySaved = tbApprejMasJpaRepository.save(tbApprejMasEntity);
		return tbApprejMasServiceMapper.mapTbApprejMasEntityToTbApprejMas(tbApprejMasEntitySaved);
	}

	@Override
	public void delete(final Long artId, final Long orgid) {
		final TbApprejMasEntityKey id = new TbApprejMasEntityKey(artId, orgid);
		tbApprejMasJpaRepository.delete(id);
	}

	public TbApprejMasJpaRepository getTbApprejMasJpaRepository() {
		return tbApprejMasJpaRepository;
	}

	public void setTbApprejMasJpaRepository(final TbApprejMasJpaRepository tbApprejMasJpaRepository) {
		this.tbApprejMasJpaRepository = tbApprejMasJpaRepository;
	}

	public TbApprejMasServiceMapper getTbApprejMasServiceMapper() {
		return tbApprejMasServiceMapper;
	}

	public void setTbApprejMasServiceMapper(final TbApprejMasServiceMapper tbApprejMasServiceMapper) {
		this.tbApprejMasServiceMapper = tbApprejMasServiceMapper;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.abm.mainetservice.web.rejection.business.service.TbApprejMasService#
	 * findByServiceId(java.math.Long, java.math.Long)
	 */
	@Override
	public List<TbApprejMas> findByServiceId(final Long artId, final Long serviceId) {
		final Long Orgid = UserSession.getCurrent().getOrganisation().getOrgid();
		final List<TbApprejMasEntity> tbApprejMasEntity = tbApprejMasJpaRepository.findByServiceId(artId, serviceId,
				Orgid);
		final List<TbApprejMas> beans = new ArrayList<>();
		for (final TbApprejMasEntity tbApprejMas : tbApprejMasEntity) {
			beans.add(tbApprejMasServiceMapper.mapTbApprejMasEntityToTbApprejMas(tbApprejMas));
		}
		return beans;
	}

	@Override
	public List<TbApprejMas> findByRemarkType(final Long artServiceid, final Long artType) {
		final Long Orgid = UserSession.getCurrent().getOrganisation().getOrgid();
		final String statusflag = MainetConstants.CommonConstants.Y;
		final List<TbApprejMasEntity> tbApprejMasEntity = tbApprejMasJpaRepository.findByRemarkType(artType, Orgid,
				artServiceid, statusflag);
		final List<TbApprejMas> beans = new ArrayList<>();
		for (final TbApprejMasEntity tbApprejMas : tbApprejMasEntity) {
			beans.add(tbApprejMasServiceMapper.mapTbApprejMasEntityToTbApprejMas(tbApprejMas));
		}
		return beans;
	}

	@Override
	public List<TbApprejMas> findByRemarkTyped(Long artType, Long orgId) {

		final List<TbApprejMasEntity> tbApprejMasEntity = tbApprejMasJpaRepository.findByArtTyped(artType, orgId);
		final List<TbApprejMas> beans = new ArrayList<>();
		for (final TbApprejMasEntity tbApprejMas : tbApprejMasEntity) {
			beans.add(tbApprejMasServiceMapper.mapTbApprejMasEntityToTbApprejMas(tbApprejMas));
		}
		return beans;
	}

}
