/*
 * Created on 22 Apr 2016 ( Time 13:02:34 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.service;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.abm.mainet.common.domain.TbTaxDetMasEntity;
import com.abm.mainet.common.domain.TbTaxDetMasEntityKey;
import com.abm.mainet.common.master.dto.TbTaxDetMas;
import com.abm.mainet.common.master.mapper.TbTaxDetMasServiceMapper;
import com.abm.mainet.common.master.repository.TbTaxDetMasJpaRepository;

/**
 * Implementation of TbTaxDetMasService
 */
@Component
@Transactional
public class TbTaxDetMasServiceImpl implements TbTaxDetMasService {

    @Resource
    private TbTaxDetMasJpaRepository tbTaxDetMasJpaRepository;

    @Resource
    private TbTaxDetMasServiceMapper tbTaxDetMasServiceMapper;

    @Override
    public TbTaxDetMas findById(final Long tdTaxdet, final Long orgid) {
        final TbTaxDetMasEntityKey id = new TbTaxDetMasEntityKey(tdTaxdet, orgid);
        final TbTaxDetMasEntity tbTaxDetMasEntity = tbTaxDetMasJpaRepository.findOne(id);
        return tbTaxDetMasServiceMapper.mapTbTaxDetMasEntityToTbTaxDetMas(tbTaxDetMasEntity);
    }

    @Override
    public List<TbTaxDetMas> findAll() {
        final Iterable<TbTaxDetMasEntity> entities = tbTaxDetMasJpaRepository.findAll();
        final List<TbTaxDetMas> beans = new ArrayList<>();
        for (final TbTaxDetMasEntity tbTaxDetMasEntity : entities) {
            beans.add(tbTaxDetMasServiceMapper.mapTbTaxDetMasEntityToTbTaxDetMas(tbTaxDetMasEntity));
        }
        return beans;
    }

    @Override
    public TbTaxDetMas save(final TbTaxDetMas tbTaxDetMas) {
        return update(tbTaxDetMas);
    }

    @Override
    public TbTaxDetMas create(final TbTaxDetMas tbTaxDetMas) {
        final TbTaxDetMasEntityKey id = new TbTaxDetMasEntityKey(tbTaxDetMas.getTdTaxdet(), tbTaxDetMas.getOrgid());
        TbTaxDetMasEntity tbTaxDetMasEntity = tbTaxDetMasJpaRepository.findOne(id);
        if (tbTaxDetMasEntity != null) {
            throw new IllegalStateException("already.exists");
        }
        tbTaxDetMasEntity = new TbTaxDetMasEntity();
        tbTaxDetMasServiceMapper.mapTbTaxDetMasToTbTaxDetMasEntity(tbTaxDetMas, tbTaxDetMasEntity);
        final TbTaxDetMasEntity tbTaxDetMasEntitySaved = tbTaxDetMasJpaRepository.save(tbTaxDetMasEntity);
        return tbTaxDetMasServiceMapper.mapTbTaxDetMasEntityToTbTaxDetMas(tbTaxDetMasEntitySaved);
    }

    @Override
    public TbTaxDetMas update(final TbTaxDetMas tbTaxDetMas) {
        final TbTaxDetMasEntityKey id = new TbTaxDetMasEntityKey(tbTaxDetMas.getTdTaxdet(), tbTaxDetMas.getOrgid());
        final TbTaxDetMasEntity tbTaxDetMasEntity = tbTaxDetMasJpaRepository.findOne(id);
        tbTaxDetMasServiceMapper.mapTbTaxDetMasToTbTaxDetMasEntity(tbTaxDetMas, tbTaxDetMasEntity);
        final TbTaxDetMasEntity tbTaxDetMasEntitySaved = tbTaxDetMasJpaRepository.save(tbTaxDetMasEntity);
        return tbTaxDetMasServiceMapper.mapTbTaxDetMasEntityToTbTaxDetMas(tbTaxDetMasEntitySaved);
    }

    @Override
    public void delete(final Long tdTaxdet, final Long orgid) {
        final TbTaxDetMasEntityKey id = new TbTaxDetMasEntityKey(tdTaxdet, orgid);
        tbTaxDetMasJpaRepository.delete(id);
    }

    public TbTaxDetMasJpaRepository getTbTaxDetMasJpaRepository() {
        return tbTaxDetMasJpaRepository;
    }

    public void setTbTaxDetMasJpaRepository(final TbTaxDetMasJpaRepository tbTaxDetMasJpaRepository) {
        this.tbTaxDetMasJpaRepository = tbTaxDetMasJpaRepository;
    }

    public TbTaxDetMasServiceMapper getTbTaxDetMasServiceMapper() {
        return tbTaxDetMasServiceMapper;
    }

    public void setTbTaxDetMasServiceMapper(final TbTaxDetMasServiceMapper tbTaxDetMasServiceMapper) {
        this.tbTaxDetMasServiceMapper = tbTaxDetMasServiceMapper;
    }

}
