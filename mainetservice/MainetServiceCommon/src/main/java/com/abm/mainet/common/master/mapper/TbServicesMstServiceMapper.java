/*
 * Created on 4 Mar 2016 ( Time 19:15:06 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.mapper;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.domain.Department;
import com.abm.mainet.common.domain.ServiceMaster;
import com.abm.mainet.common.master.dto.TbServicesMst;
import com.abm.mainet.common.utility.AbstractServiceMapper;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TbServicesMstServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public TbServicesMstServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'TbServicesMstEntity' to 'TbServicesMst'
     * @param tbServicesMstEntity
     */
    public TbServicesMst mapTbServicesMstEntityToTbServicesMst(final ServiceMaster tbServicesMstEntity) {
        if (tbServicesMstEntity == null) {
            return null;
        }

        // --- Generic mapping
        final TbServicesMst tbServicesMst = map(tbServicesMstEntity, TbServicesMst.class);

        // --- Link mapping ( link to TbDepartment )
        if (tbServicesMstEntity.getTbDepartment() != null) {
            tbServicesMst.setCdmDeptId(Long.valueOf(tbServicesMstEntity.getTbDepartment().getDpDeptid()));
        }
        return tbServicesMst;
    }

    /**
     * Mapping from 'TbServicesMst' to 'TbServicesMstEntity'
     * @param tbServicesMst
     * @param tbServicesMstEntity
     */
    public void mapTbServicesMstToTbServicesMstEntity(final TbServicesMst tbServicesMst,
            final ServiceMaster tbServicesMstEntity) {
        if (tbServicesMst == null) {
            return;
        }

        // --- Generic mapping
        map(tbServicesMst, tbServicesMstEntity);

        // --- Link mapping ( link : tbServicesMst )
        if (hasLinkToTbDepartment(tbServicesMst)) {
            final Department tbDepartment1 = new Department();
            tbDepartment1.setDpDeptid(tbServicesMst.getCdmDeptId().longValue());
            tbServicesMstEntity.setTbDepartment(tbDepartment1);
        } else {
            tbServicesMstEntity.setTbDepartment(null);
        }

    }

    /**
     * Verify that TbDepartment id is valid.
     * @param TbDepartment TbDepartment
     * @return boolean
     */
    private boolean hasLinkToTbDepartment(final TbServicesMst tbServicesMst) {
        if (tbServicesMst.getCdmDeptId() != null) {
            return true;
        }
        return false;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(final ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}