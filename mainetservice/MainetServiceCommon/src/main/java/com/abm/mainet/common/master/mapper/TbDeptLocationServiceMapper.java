/*
 * Created on 13 Apr 2016 ( Time 13:12:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.mapper;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.domain.Department;
import com.abm.mainet.common.domain.DeptLocationEntity;
import com.abm.mainet.common.domain.Organisation;
import com.abm.mainet.common.master.dto.TbDeptLocation;
import com.abm.mainet.common.utility.AbstractServiceMapper;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TbDeptLocationServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public TbDeptLocationServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'TbDeptLocationEntity' to 'TbDeptLocation'
     * @param tbDeptLocationEntity
     */
    public TbDeptLocation mapTbDeptLocationEntityToTbDeptLocation(final DeptLocationEntity tbDeptLocationEntity) {
        if (tbDeptLocationEntity == null) {
            return null;
        }

        // --- Generic mapping
        final TbDeptLocation tbDeptLocation = map(tbDeptLocationEntity, TbDeptLocation.class);

        // --- Link mapping ( link to TbOrganisation )
        if (tbDeptLocationEntity.getTbOrganisation() != null) {
            tbDeptLocation.setOrgid(tbDeptLocationEntity.getTbOrganisation().getOrgid());
        }
        // --- Link mapping ( link to TbDepartment )
        if (tbDeptLocationEntity.getTbDepartment() != null) {
            tbDeptLocation.setDpDeptid(tbDeptLocationEntity.getTbDepartment().getDpDeptid());
        }

        if (tbDeptLocationEntity.getLocId() != null) {
            tbDeptLocation.setLocId(tbDeptLocationEntity.getLocId());
        }

        return tbDeptLocation;
    }

    /**
     * Mapping from 'TbDeptLocation' to 'TbDeptLocationEntity'
     * @param tbDeptLocation
     * @param tbDeptLocationEntity
     */
    public void mapTbDeptLocationToTbDeptLocationEntity(final TbDeptLocation tbDeptLocation,
            final DeptLocationEntity tbDeptLocationEntity) {
        if (tbDeptLocation == null) {
            return;
        }

        // --- Generic mapping
        map(tbDeptLocation, tbDeptLocationEntity);

        // --- Link mapping ( link : tbDeptLocation )
        if (hasLinkToTbOrganisation(tbDeptLocation)) {
            final Organisation tbOrganisation1 = new Organisation();
            tbOrganisation1.setOrgid(tbDeptLocation.getOrgid());
            tbDeptLocationEntity.setTbOrganisation(tbOrganisation1);
        } else {
            tbDeptLocationEntity.setTbOrganisation(null);
        }

        // --- Link mapping ( link : tbDeptLocation )
        if (hasLinkToTbDepartment(tbDeptLocation)) {
            final Department tbDepartment2 = new Department();
            tbDepartment2.setDpDeptid(tbDeptLocation.getDpDeptid());
            tbDeptLocationEntity.setTbDepartment(tbDepartment2);
        } else {
            tbDeptLocationEntity.setTbDepartment(null);
        }

    }

    /**
     * Verify that TbOrganisation id is valid.
     * @param TbOrganisation TbOrganisation
     * @return boolean
     */
    private boolean hasLinkToTbOrganisation(final TbDeptLocation tbDeptLocation) {
        if (tbDeptLocation.getOrgid() != null) {
            return true;
        }
        return false;
    }

    /**
     * Verify that TbDepartment id is valid.
     * @param TbDepartment TbDepartment
     * @return boolean
     */
    private boolean hasLinkToTbDepartment(final TbDeptLocation tbDeptLocation) {
        if (tbDeptLocation.getDpDeptid() != null) {
            return true;
        }
        return false;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(final ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}