/*
 * Created on 21 Mar 2016 ( Time 19:07:24 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.formbuilder.mapper;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.formbuilder.domain.FormBuilderEntity;
import com.abm.mainet.common.formbuilder.dto.FormBuilder;
import com.abm.mainet.common.utility.AbstractServiceMapper;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class FormBuilderServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public FormBuilderServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'FormBuilderEntity' to 'FormBuilder'
     * @param tbScrutinyLabelsEntity
     */
    public FormBuilder mapFormBuilderEntityToFormBuilder(final FormBuilderEntity tbScrutinyLabelsEntity) {
        if (tbScrutinyLabelsEntity == null) {
            return null;
        }

        // --- Generic mapping
        final FormBuilder tbScrutinyLabels = map(tbScrutinyLabelsEntity, FormBuilder.class);

        return tbScrutinyLabels;
    }

    /**
     * Mapping from 'FormBuilder' to 'FormBuilderEntity'
     * @param tbScrutinyLabels
     * @param tbScrutinyLabelsEntity
     */
    public void mapFormBuilderToFormBuilderEntity(final FormBuilder tbScrutinyLabels,
            final FormBuilderEntity tbScrutinyLabelsEntity) {
        if (tbScrutinyLabels == null) {
            return;
        }

        // --- Generic mapping
        map(tbScrutinyLabels, tbScrutinyLabelsEntity);

    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(final ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}