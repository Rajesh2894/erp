/*
 * Created on 24 Jun 2015 ( Time 19:52:53 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.abm.mainet.common.service;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.abm.mainet.common.domain.TbComparamDetEntity;
import com.abm.mainet.common.master.dto.TbComparamDet;
import com.abm.mainet.common.master.mapper.TbComparamDetServiceMapper;
import com.abm.mainet.common.master.repository.TbComparamDetJpaRepository;

/**
 * Implementation of TbComparamDetService
 */
@Service
public class TbComparamDetServiceImpl implements TbComparamDetService {

    @Resource
    private TbComparamDetJpaRepository tbComparamDetJpaRepository;

    @Resource
    private TbComparamDetServiceMapper tbComparamDetServiceMapper;

    @Override
    @Transactional
    public TbComparamDet findById(final Long cpdId) {
        final TbComparamDetEntity tbComparamDetEntity = tbComparamDetJpaRepository.findOne(cpdId);
        return tbComparamDetServiceMapper.mapTbComparamDetEntityToTbComparamDet(tbComparamDetEntity);
    }

    @Override
    @Transactional
    public List<TbComparamDet> findAll() {
        final Iterable<TbComparamDetEntity> entities = tbComparamDetJpaRepository.findAll();
        final List<TbComparamDet> beans = new ArrayList<>();
        for (final TbComparamDetEntity tbComparamDetEntity : entities) {
            beans.add(tbComparamDetServiceMapper.mapTbComparamDetEntityToTbComparamDet(tbComparamDetEntity));
        }
        return beans;
    }

    @Override
    @Transactional
    public TbComparamDet create(final TbComparamDet tbComparamDet) {
        TbComparamDetEntity tbComparamDetEntity = null;
        if (tbComparamDet.getCpdId() != null) {
            tbComparamDetEntity = tbComparamDetJpaRepository.findOne(tbComparamDet.getCpdId());
        }
        if (tbComparamDetEntity != null) {
            throw new IllegalStateException("already.exists");
        }
        tbComparamDetEntity = new TbComparamDetEntity();
        tbComparamDetServiceMapper.mapTbComparamDetToTbComparamDetEntity(tbComparamDet, tbComparamDetEntity);
        final TbComparamDetEntity tbComparamDetEntitySaved = tbComparamDetJpaRepository.save(tbComparamDetEntity);
        return tbComparamDetServiceMapper.mapTbComparamDetEntityToTbComparamDet(tbComparamDetEntitySaved);
    }

    @Override
    @Transactional
    public TbComparamDet update(final TbComparamDet tbComparamDet) {
        final TbComparamDetEntity tbComparamDetEntity = tbComparamDetJpaRepository.findOne(tbComparamDet.getCpdId());
        tbComparamDetServiceMapper.mapTbComparamDetToTbComparamDetEntity(tbComparamDet, tbComparamDetEntity);
        final TbComparamDetEntity tbComparamDetEntitySaved = tbComparamDetJpaRepository.save(tbComparamDetEntity);
        return tbComparamDetServiceMapper.mapTbComparamDetEntityToTbComparamDet(tbComparamDetEntitySaved);
    }

    @Override
    @Transactional
    public void delete(final Long cpdId) {

        final TbComparamDetEntity tbComparamDetEntity = new TbComparamDetEntity();
        tbComparamDetJpaRepository.delete(tbComparamDetEntity);
    }

    public TbComparamDetJpaRepository getTbComparamDetJpaRepository() {
        return tbComparamDetJpaRepository;
    }

    public void setTbComparamDetJpaRepository(final TbComparamDetJpaRepository tbComparamDetJpaRepository) {
        this.tbComparamDetJpaRepository = tbComparamDetJpaRepository;
    }

    public TbComparamDetServiceMapper getTbComparamDetServiceMapper() {
        return tbComparamDetServiceMapper;
    }

    public void setTbComparamDetServiceMapper(final TbComparamDetServiceMapper tbComparamDetServiceMapper) {
        this.tbComparamDetServiceMapper = tbComparamDetServiceMapper;
    }

    @Override
    public List<TbComparamDet> findAllComparamDetData(final Long orgId) {

        final List<TbComparamDetEntity> comparaDetEntityList = tbComparamDetJpaRepository.findAllComparamDetData(orgId);

        final List<TbComparamDet> comparamDetList = new ArrayList<>();

        for (final TbComparamDetEntity tbComparamDetEntity : comparaDetEntityList) {

            final TbComparamDet tbComparamDet = tbComparamDetServiceMapper
                    .mapTbComparamDetEntityToTbComparamDet(tbComparamDetEntity);

            comparamDetList.add(tbComparamDet);

        }

        return comparamDetList;
    }

    @Override
    public List<TbComparamDet> findComparamDetDataByCpmId(final Long cpmId, final Long orgId) {

        final List<TbComparamDetEntity> entities = tbComparamDetJpaRepository.findComparamDetDataByCpmId(cpmId, orgId);

        final List<TbComparamDet> beans = new ArrayList<>();

        for (final TbComparamDetEntity tbComparamDetEntity : entities) {

            beans.add(tbComparamDetServiceMapper.mapTbComparamDetEntityToTbComparamDet(tbComparamDetEntity));
        }
        return beans;
    }

    /*
     * (non-Javadoc)
     * @see com.abm.mainetservice.web.masters.prefix.business.service.TbComparamDetService#getPrefixDataForPermenent(long)
     */
    @Override
    public List<Object[]> getPrefixDataForPermenent(final Long orgid) {
        final List<Object[]> entities = tbComparamDetJpaRepository.getPrefixDataForPermenent(orgid);
        return entities;
    }

    /*
     * (non-Javadoc)
     * @see com.abm.mainetservice.web.masters.prefix.business.service.TbComparamDetService#getPrefixDataForFinancialWise(long)
     */
    @Override
    public List<TbComparamDet> getPrefixDataForFinancialWise(final Long orgid) {
        final List<TbComparamDetEntity> entities = tbComparamDetJpaRepository.getPrefixDataForFinancialWise(orgid);

        final List<TbComparamDet> beans = new ArrayList<>();

        for (final TbComparamDetEntity tbComparamDetEntity : entities) {

            beans.add(tbComparamDetServiceMapper.mapTbComparamDetEntityToTbComparamDet(tbComparamDetEntity));
        }
        return beans;
    }

    /*
     * (non-Javadoc)
     * @see
     * com.abm.mainetservice.web.masters.prefix.business.service.TbComparamDetService#getPrefixDataForPermenentPay(java.lang.Long)
     */
    @Override
    public List<Object[]> getPrefixDataForPermenentPay(final Long orgid) {
        final List<Object[]> entities = tbComparamDetJpaRepository.getDataForPermenentPay(orgid);
        return entities;
    }

    @Override
    @Transactional
    public List<TbComparamDetEntity> findCmprmDetDataByCpmId(final Long cpmId) {

        return tbComparamDetJpaRepository.findCmprmDetByCpmId(cpmId);
    }

}
