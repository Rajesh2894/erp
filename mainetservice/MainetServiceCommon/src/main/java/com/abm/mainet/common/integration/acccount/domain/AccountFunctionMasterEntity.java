/*
 * Created on 6 Jun 2016 ( Time 15:25:12 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite)

package com.abm.mainet.common.integration.acccount.domain;

import java.io.Serializable;
import java.util.Date;
import java.util.LinkedHashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;

import com.fasterxml.jackson.annotation.JsonIgnore;

@Entity
@Table(name = "TB_AC_FUNCTION_MASTER")

public class AccountFunctionMasterEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GenericGenerator(name = "MyCustomGenerator", strategy = "com.abm.mainet.common.utility.SequenceIdGenerator")
    @GeneratedValue(generator = "MyCustomGenerator")
    @Column(name = "FUNCTION_ID", nullable = false)
    private Long functionId;

    @Transient
    private String functionLevel;

    // ----------------------------------------------------------------------
    // ENTITY DATA FIELDS
    // ----------------------------------------------------------------------
    @Column(name = "FUNCTION_CODE", length = 10)
    private String functionCode;

    @Column(name = "FUNCTION_DESC")
    private String functionDesc;

    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinColumn(name = "FUNCTION_PARENT_ID")
    private AccountFunctionMasterEntity functionParentId;

    @OneToMany(mappedBy = "functionParentId", fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    private Set<AccountFunctionMasterEntity> functionHierarchicalList = new LinkedHashSet<>();

    @Column(name = "FUNCTION_COMPCODE", length = 20)
    private String functionCompcode;

    @Column(name = "ORGID", nullable = false)
    private Long orgid;

    @Column(name = "CREATED_BY", nullable = false)
    private Long userId;

    @Temporal(TemporalType.DATE)
    @Column(name = "CREATED_DATE", nullable = false)
    private Date lmoddate;

    @Column(name = "UPDATED_BY")
    private Long updatedBy;

    @Temporal(TemporalType.DATE)
    @Column(name = "UPDATED_DATE")
    private Date updatedDate;

    @JsonIgnore
    @Column(name = "LG_IP_MAC", length = 100)
    private String lgIpMac;

    @JsonIgnore
    @Column(name = "LG_IP_MAC_UPD", length = 100)
    private String lgIpMacUpd;

    @Column(name = "FUNCTION_STATUS")
    private Long functionStatusCpdId;

    // "codcofdetId" (column "CODCOFDET_ID") is not defined by itself because used as FK in a link

    // ----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    // ----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name = "CODCOFDET_ID", referencedColumnName = "CODCOFDET_ID")
    private TbAcCodingstructureDetEntity tbAcCodingstructureDet;

    // ----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    // ----------------------------------------------------------------------
    public AccountFunctionMasterEntity() {
        super();
    }

    // ----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    // ----------------------------------------------------------------------
    public void setFunctionId(final Long functionId) {
        this.functionId = functionId;
    }

    public Long getFunctionId() {
        return functionId;
    }

    // ----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    // ----------------------------------------------------------------------
    // --- DATABASE MAPPING : FUNCTION_CODE ( VARCHAR2 )
    public void setFunctionCode(final String functionCode) {
        this.functionCode = functionCode;
    }

    public String getFunctionCode() {
        return functionCode;
    }

    // --- DATABASE MAPPING : FUNCTION_DESC ( NVARCHAR2 )
    public void setFunctionDesc(final String functionDesc) {
        this.functionDesc = functionDesc;
    }

    public String getFunctionDesc() {
        return functionDesc;
    }

    // --- DATABASE MAPPING : FUNCTION_COMPCODE ( VARCHAR2 )
    public void setFunctionCompcode(final String functionCompcode) {
        this.functionCompcode = functionCompcode;
    }

    public String getFunctionCompcode() {
        return functionCompcode;
    }

    // --- DATABASE MAPPING : ORGID ( NUMBER )
    public void setOrgid(final Long orgid) {
        this.orgid = orgid;
    }

    public Long getOrgid() {
        return orgid;
    }

    // --- DATABASE MAPPING : USER_ID ( NUMBER )
    public void setUserId(final Long userId) {
        this.userId = userId;
    }

    public Long getUserId() {
        return userId;
    }

    // --- DATABASE MAPPING : LMODDATE ( DATE )
    public void setLmoddate(final Date lmoddate) {
        this.lmoddate = lmoddate;
    }

    public Date getLmoddate() {
        return lmoddate;
    }

    // --- DATABASE MAPPING : UPDATED_BY ( NUMBER )
    public void setUpdatedBy(final Long updatedBy) {
        this.updatedBy = updatedBy;
    }

    /**
     * @return the functionParentId
     */
    public AccountFunctionMasterEntity getFunctionParentId() {
        return functionParentId;
    }

    /**
     * @param functionParentId the functionParentId to set
     */
    public void setFunctionParentId(final AccountFunctionMasterEntity functionParentId) {
        this.functionParentId = functionParentId;
    }

    public Long getUpdatedBy() {
        return updatedBy;
    }

    // --- DATABASE MAPPING : UPDATED_DATE ( DATE )
    public void setUpdatedDate(final Date updatedDate) {
        this.updatedDate = updatedDate;
    }

    public Date getUpdatedDate() {
        return updatedDate;
    }

    // --- DATABASE MAPPING : LG_IP_MAC ( VARCHAR2 )
    public void setLgIpMac(final String lgIpMac) {
        this.lgIpMac = lgIpMac;
    }

    public String getLgIpMac() {
        return lgIpMac;
    }

    // --- DATABASE MAPPING : LG_IP_MAC_UPD ( VARCHAR2 )
    public void setLgIpMacUpd(final String lgIpMacUpd) {
        this.lgIpMacUpd = lgIpMacUpd;
    }

    public String getLgIpMacUpd() {
        return lgIpMacUpd;
    }

    /**
     * @return the functionStatusCpdId
     */
    public Long getFunctionStatusCpdId() {
        return functionStatusCpdId;
    }

    /**
     * @param functionStatusCpdId the functionStatusCpdId to set
     */
    public void setFunctionStatusCpdId(final Long functionStatusCpdId) {
        this.functionStatusCpdId = functionStatusCpdId;
    }

    // ----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    // ----------------------------------------------------------------------
    public void setTbAcCodingstructureDet(final TbAcCodingstructureDetEntity tbAcCodingstructureDet) {
        this.tbAcCodingstructureDet = tbAcCodingstructureDet;
    }

    public TbAcCodingstructureDetEntity getTbAcCodingstructureDet() {
        return tbAcCodingstructureDet;
    }

    public static String[] getPkValues() {
        return new String[] { "AC", "TB_AC_FUNCTION_MASTER", "FUNCTION_ID" };
    }

    @Override
    public String toString() {
        return getFunctionCode() + getFunctionLevel();
    }

    /**
     * @return the functionHierarchicalList
     */
    public Set<AccountFunctionMasterEntity> getFunctionHierarchicalList() {
        return functionHierarchicalList;
    }

    /**
     * @param functionHierarchicalList the functionHierarchicalList to set
     */
    public void setFunctionHierarchicalList(
            final Set<AccountFunctionMasterEntity> functionHierarchicalList) {
        this.functionHierarchicalList = functionHierarchicalList;
    }

    /**
     * @return the functionLevel
     */
    public String getFunctionLevel() {
        return functionLevel;
    }

    /**
     * @param functionLevel the functionLevel to set
     */
    public void setFunctionLevel(final String functionLevel) {
        this.functionLevel = functionLevel;
    }

    /*
     * (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = (prime * result) + ((functionCode == null) ? 0 : functionCode.hashCode());
        result = (prime * result) + ((functionLevel == null) ? 0 : functionLevel.hashCode());
        result = (prime * result) + ((orgid == null) ? 0 : orgid.hashCode());
        return result;
    }

    /*
     * (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(final Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (!(obj instanceof AccountFunctionMasterEntity)) {
            return false;
        }
        final AccountFunctionMasterEntity other = (AccountFunctionMasterEntity) obj;
        if (functionCode == null) {
            if (other.functionCode != null) {
                return false;
            }
        } else if (!functionCode.equals(other.functionCode)) {
            return false;
        }
        if (functionLevel == null) {
            if (other.functionLevel != null) {
                return false;
            }
        } else if (!functionLevel.equals(other.functionLevel)) {
            return false;
        }
        if (orgid == null) {
            if (other.orgid != null) {
                return false;
            }
        } else if (!orgid.equals(other.orgid)) {
            return false;
        }
        return true;
    }

}
