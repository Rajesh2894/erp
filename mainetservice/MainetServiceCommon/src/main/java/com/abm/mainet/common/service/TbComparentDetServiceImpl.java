/*
 * Created on 6 Aug 2015 ( Time 16:35:26 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.service;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.abm.mainet.common.domain.TbComparentDetEntity;
import com.abm.mainet.common.master.dto.TbComparentDet;
import com.abm.mainet.common.master.mapper.TbComparentDetServiceMapper;
import com.abm.mainet.common.master.repository.TbComparentDetJpaRepository;

/**
 * Implementation of TbComparentDetService
 */
@Component
@Transactional
public class TbComparentDetServiceImpl implements TbComparentDetService {

    @Resource
    private TbComparentDetJpaRepository tbComparentDetJpaRepository;

    @Resource
    private TbComparentDetServiceMapper tbComparentDetServiceMapper;

    @Override
    public TbComparentDet update(final TbComparentDet tbComparentDet) {
        final TbComparentDetEntity tbComparentDetEntity = tbComparentDetJpaRepository.findOne(tbComparentDet.getCodId());
        tbComparentDetServiceMapper.mapTbComparentDetToTbComparentDetEntity(tbComparentDet, tbComparentDetEntity);
        final TbComparentDetEntity tbComparentDetEntitySaved = tbComparentDetJpaRepository.save(tbComparentDetEntity);
        return tbComparentDetServiceMapper.mapTbComparentDetEntityToTbComparentDet(tbComparentDetEntitySaved);
    }

    public TbComparentDetJpaRepository getTbComparentDetJpaRepository() {
        return tbComparentDetJpaRepository;
    }

    public void setTbComparentDetJpaRepository(final TbComparentDetJpaRepository tbComparentDetJpaRepository) {
        this.tbComparentDetJpaRepository = tbComparentDetJpaRepository;
    }

    public TbComparentDetServiceMapper getTbComparentDetServiceMapper() {
        return tbComparentDetServiceMapper;
    }

    public void setTbComparentDetServiceMapper(final TbComparentDetServiceMapper tbComparentDetServiceMapper) {
        this.tbComparentDetServiceMapper = tbComparentDetServiceMapper;
    }

    @Override
    public List<TbComparentDet> findComparentDetDataById(final Long comId, final Long orgId) {

        final List<TbComparentDetEntity> entities = tbComparentDetJpaRepository.findComparentDetDataById(comId, orgId);
        final List<TbComparentDet> beans = new ArrayList<>();
        for (final TbComparentDetEntity tbComparentDetEntity : entities) {
            beans.add(tbComparentDetServiceMapper.mapTbComparentDetEntityToTbComparentDet(tbComparentDetEntity));
        }
        return beans;
    }

    @Override
    public List<TbComparentDet> findComparentDetDataByParentId(final Long parentId, final Long orgId) {

        final List<TbComparentDetEntity> entities = tbComparentDetJpaRepository.findComparentDetDataByParentId(parentId, orgId);
        final List<TbComparentDet> beans = new ArrayList<>();
        for (final TbComparentDetEntity tbComparentDetEntity : entities) {
            beans.add(tbComparentDetServiceMapper.mapTbComparentDetEntityToTbComparentDet(tbComparentDetEntity));
        }
        return beans;
    }

}
