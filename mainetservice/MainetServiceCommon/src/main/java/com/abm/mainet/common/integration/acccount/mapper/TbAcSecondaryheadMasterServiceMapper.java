/*
 * Created on 16 Jul 2016 ( Time 14:47:50 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.integration.acccount.mapper;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.constant.MainetConstants;
import com.abm.mainet.common.domain.BankAccountMasterEntity;
import com.abm.mainet.common.integration.acccount.domain.AccountFieldMasterEntity;
import com.abm.mainet.common.integration.acccount.domain.AccountFunctionMasterEntity;
import com.abm.mainet.common.integration.acccount.domain.AccountFundMasterEntity;
import com.abm.mainet.common.integration.acccount.domain.AccountHeadPrimaryAccountCodeMasterEntity;
import com.abm.mainet.common.integration.acccount.domain.AccountHeadSecondaryAccountCodeMasterEntity;
import com.abm.mainet.common.integration.acccount.domain.TbAcCodingstructureDetEntity;
import com.abm.mainet.common.integration.acccount.dto.SecondaryheadMaster;
import com.abm.mainet.common.utility.AbstractServiceMapper;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TbAcSecondaryheadMasterServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public TbAcSecondaryheadMasterServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'TbAcSecondaryheadMasterEntity' to 'TbAcSecondaryheadMaster'
     *
     * @param tbAcSecondaryheadMasterEntity
     */
    public SecondaryheadMaster mapTbAcSecondaryheadMasterEntityToTbAcSecondaryheadMaster(
            final AccountHeadSecondaryAccountCodeMasterEntity tbAcSecondaryheadMasterEntity) {
        if (tbAcSecondaryheadMasterEntity == null) {
            return null;
        }

        // --- Generic mapping
        final SecondaryheadMaster tbAcSecondaryheadMaster = map(tbAcSecondaryheadMasterEntity, SecondaryheadMaster.class);

        // --- Link mapping ( link to TbAcFieldMaster )
        if (tbAcSecondaryheadMasterEntity.getTbAcFieldMaster() != null) {
            tbAcSecondaryheadMaster.setFieldId(tbAcSecondaryheadMasterEntity.getTbAcFieldMaster().getFieldId());
            tbAcSecondaryheadMaster.setFieldCode(tbAcSecondaryheadMasterEntity.getTbAcFieldMaster().getFieldCompcode()
                    + MainetConstants.SEPARATOR + tbAcSecondaryheadMasterEntity.getTbAcFieldMaster().getFieldDesc());
        }

        // --- Link mapping ( link to TbAcFundMaster )
        if (tbAcSecondaryheadMasterEntity.getTbAcFundMaster() != null) {
            tbAcSecondaryheadMaster.setFundId(tbAcSecondaryheadMasterEntity.getTbAcFundMaster().getFundId());
            tbAcSecondaryheadMaster.setFundCode(tbAcSecondaryheadMasterEntity.getTbAcFundMaster().getFundCompositecode()
                    + MainetConstants.SEPARATOR + tbAcSecondaryheadMasterEntity.getTbAcFundMaster().getFundDesc());
        }

        // --- Link mapping ( link to TbAcPrimaryheadMaster )
        if (tbAcSecondaryheadMasterEntity.getTbAcPrimaryheadMaster() != null) {
            tbAcSecondaryheadMaster
                    .setPacHeadId(tbAcSecondaryheadMasterEntity.getTbAcPrimaryheadMaster().getPrimaryAcHeadId());
            tbAcSecondaryheadMaster.setPacHeadCode(
                    tbAcSecondaryheadMasterEntity.getTbAcPrimaryheadMaster().getPrimaryAcHeadCompcode());
            tbAcSecondaryheadMaster
                    .setPacHeadDesc(tbAcSecondaryheadMasterEntity.getTbAcPrimaryheadMaster().getPrimaryAcHeadDesc());
        }
        // --- Link mapping ( link to TbAcFunctionMaster )
        if (tbAcSecondaryheadMasterEntity.getTbAcFunctionMaster() != null) {
            tbAcSecondaryheadMaster
                    .setFunctionId(tbAcSecondaryheadMasterEntity.getTbAcFunctionMaster().getFunctionId());
            tbAcSecondaryheadMaster
                    .setFunctionCode(tbAcSecondaryheadMasterEntity.getTbAcFunctionMaster().getFunctionCompcode()
                            + MainetConstants.SEPARATOR
                            + tbAcSecondaryheadMasterEntity.getTbAcFunctionMaster().getFunctionDesc());
        }
        // --- Link mapping ( link to TbAcCodingstructureDet )
        if (tbAcSecondaryheadMasterEntity.getTbAcCodingstructureDet() != null) {
            tbAcSecondaryheadMaster
                    .setCodcofdetId(tbAcSecondaryheadMasterEntity.getTbAcCodingstructureDet().getCodcofdetId());
        }

        // --- Link mapping ( link to TbBankaccount )
        if (tbAcSecondaryheadMasterEntity.getTbBankaccount() != null) {
            tbAcSecondaryheadMaster.setBaAccountid(tbAcSecondaryheadMasterEntity.getTbBankaccount().getBaAccountId());
        }
        return tbAcSecondaryheadMaster;
    }

    /**
     * Mapping from 'TbAcSecondaryheadMaster' to 'TbAcSecondaryheadMasterEntity'
     *
     * @param tbAcSecondaryheadMaster
     * @param tbAcSecondaryheadMasterEntity
     */
    public void mapTbAcSecondaryheadMasterToTbAcSecondaryheadMasterEntity(final SecondaryheadMaster tbAcSecondaryheadMaster,
            final AccountHeadSecondaryAccountCodeMasterEntity tbAcSecondaryheadMasterEntity) {
        if (tbAcSecondaryheadMaster == null) {
            return;
        }

        // --- Generic mapping
        map(tbAcSecondaryheadMaster, tbAcSecondaryheadMasterEntity);

        // --- Link mapping ( link : tbAcBudgetCode )
        if (hasLinkToTbAcFieldMaster(tbAcSecondaryheadMaster)) {
            final AccountFieldMasterEntity tbAcFieldMaster = new AccountFieldMasterEntity();
            if (tbAcSecondaryheadMaster.getFieldId() == null) {
            }
            tbAcFieldMaster.setFieldId(tbAcSecondaryheadMaster.getFieldId().longValue());
            tbAcSecondaryheadMasterEntity.setTbAcFieldMaster(tbAcFieldMaster);
        } else {
            tbAcSecondaryheadMasterEntity.setTbAcFieldMaster(null);
        }

        // --- Link mapping ( link : tbAcBudgetCode )
        if (hasLinkToTbAcFundMaster(tbAcSecondaryheadMaster)) {
            final AccountFundMasterEntity tbAcFundMaster = new AccountFundMasterEntity();
            if (tbAcSecondaryheadMaster.getFundId() == null) {
            }
            tbAcFundMaster.setFundId(tbAcSecondaryheadMaster.getFundId().longValue());
            tbAcSecondaryheadMasterEntity.setTbAcFundMaster(tbAcFundMaster);
        } else {
            tbAcSecondaryheadMasterEntity.setTbAcFundMaster(null);
        }

        // --- Link mapping ( link : tbAcSecondaryheadMaster )
        if (hasLinkToTbAcPrimaryheadMaster(tbAcSecondaryheadMaster)) {
            final AccountHeadPrimaryAccountCodeMasterEntity tbAcPrimaryheadMaster1 = new AccountHeadPrimaryAccountCodeMasterEntity();
            tbAcPrimaryheadMaster1.setPrimaryAcHeadId(tbAcSecondaryheadMaster.getPacHeadId());
            tbAcSecondaryheadMasterEntity.setTbAcPrimaryheadMaster(tbAcPrimaryheadMaster1);
        } else {
            tbAcSecondaryheadMasterEntity.setTbAcPrimaryheadMaster(null);
        }

        // --- Link mapping ( link : tbAcSecondaryheadMaster )
        if (hasLinkToTbAcCodingstructureDet(tbAcSecondaryheadMaster)) {
            final TbAcCodingstructureDetEntity tbAcCodingstructureDet2 = new TbAcCodingstructureDetEntity();
            tbAcCodingstructureDet2
                    .setCodcofdetId(Long.valueOf(tbAcSecondaryheadMaster.getCodcofdetId() + MainetConstants.BLANK));
            tbAcSecondaryheadMasterEntity.setTbAcCodingstructureDet(tbAcCodingstructureDet2);
        } else {
            tbAcSecondaryheadMasterEntity.setTbAcCodingstructureDet(null);
        }

        // --- Link mapping ( link : tbAcSecondaryheadMaster )
        if (hasLinkToTbBankaccount(tbAcSecondaryheadMaster)) {
            final BankAccountMasterEntity tbBankaccount4 = new BankAccountMasterEntity();
            tbBankaccount4.setBaAccountId(Long.valueOf(tbAcSecondaryheadMaster.getBaAccountid() + MainetConstants.BLANK));
            tbAcSecondaryheadMasterEntity.setTbBankaccount(tbBankaccount4);
        } else {
            tbAcSecondaryheadMasterEntity.setTbBankaccount(null);
        }
        // --- Link mapping ( link : tbAcBudgetCode )
        if (hasLinkToTbAcFunctionMaster(tbAcSecondaryheadMaster)) {
            final AccountFunctionMasterEntity tbAcFunctionMaster = new AccountFunctionMasterEntity();
            if (tbAcSecondaryheadMaster.getFunctionId() == null) {
            }
            tbAcFunctionMaster.setFunctionId(tbAcSecondaryheadMaster.getFunctionId().longValue());
            tbAcSecondaryheadMasterEntity.setTbAcFunctionMaster(tbAcFunctionMaster);
        } else {
            tbAcSecondaryheadMasterEntity.setTbAcFunctionMaster(null);
        }

    }

    /**
     * Verify that TbAcFieldMaster id is valid.
     *
     * @param TbAcFieldMaster TbAcFieldMaster
     * @return boolean
     */
    private boolean hasLinkToTbAcFieldMaster(final SecondaryheadMaster tbAcSecondaryheadMaster) {
        if (tbAcSecondaryheadMaster.getFieldId() != null) {
            return true;
        }
        return false;
    }

    /**
     * Verify that TbAcFundMaster id is valid.
     *
     * @param TbAcFundMaster TbAcFundMaster
     * @return boolean
     */
    private boolean hasLinkToTbAcFundMaster(final SecondaryheadMaster tbAcSecondaryheadMaster) {
        if (tbAcSecondaryheadMaster.getFundId() != null) {
            return true;
        }
        return false;
    }

    /**
     * Verify that TbAcPrimaryheadMaster id is valid.
     *
     * @param TbAcPrimaryheadMaster TbAcPrimaryheadMaster
     * @return boolean
     */
    private boolean hasLinkToTbAcPrimaryheadMaster(final SecondaryheadMaster tbAcSecondaryheadMaster) {
        if (tbAcSecondaryheadMaster.getPacHeadId() != null) {
            return true;
        }
        return false;
    }

    /**
     * Verify that TbAcCodingstructureDet id is valid.
     *
     * @param TbAcCodingstructureDet TbAcCodingstructureDet
     * @return boolean
     */
    private boolean hasLinkToTbAcCodingstructureDet(final SecondaryheadMaster tbAcSecondaryheadMaster) {
        if (tbAcSecondaryheadMaster.getCodcofdetId() != null) {
            return true;
        }
        return false;
    }

    /**
     * Verify that TbBankaccount id is valid.
     *
     * @param TbBankaccount TbBankaccount
     * @return boolean
     */
    private boolean hasLinkToTbBankaccount(final SecondaryheadMaster tbAcSecondaryheadMaster) {
        if (tbAcSecondaryheadMaster.getBaAccountid() != null) {
            return true;
        }
        return false;
    }

    /**
     * Verify that TbAcFunctionMaster id is valid.
     *
     * @param TbAcFunctionMaster TbAcFunctionMaster
     * @return boolean
     */
    private boolean hasLinkToTbAcFunctionMaster(final SecondaryheadMaster tbAcSecondaryheadMaster) {
        if (tbAcSecondaryheadMaster.getFunctionId() != null) {
            return true;
        }
        return false;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(final ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}