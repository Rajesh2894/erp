/*
 * Created on 19 Aug 2015 ( Time 17:12:00 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.service;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.abm.mainet.common.audit.service.AuditService;
import com.abm.mainet.common.constant.MainetConstants;
import com.abm.mainet.common.domain.Designation;
import com.abm.mainet.common.domain.DesignationHistory;
import com.abm.mainet.common.domain.Employee;
import com.abm.mainet.common.domain.LocationMasEntity;
import com.abm.mainet.common.domain.Organisation;
import com.abm.mainet.common.domain.TbOrgDesignationEntity;
import com.abm.mainet.common.master.dao.IDesignationDAO;
import com.abm.mainet.common.master.dto.DesignationBean;
import com.abm.mainet.common.master.dto.TbOrgDesignation;
import com.abm.mainet.common.master.mapper.DesignationServiceMapper;
import com.abm.mainet.common.master.repository.DesignationJpaRepository;
import com.abm.mainet.common.master.repository.EmployeeJpaRepository;
import com.abm.mainet.common.utility.UserSession;

/**
 * Implementation of DesignationService
 */
@Component
public class DesignationServiceImpl implements DesignationService {
    @Resource
    private DesignationJpaRepository designationJpaRepository;
    @Resource
    private DesignationServiceMapper designationServiceMapper;

    @Resource
    private EmployeeJpaRepository employeeJpaRepository;

    @Resource
    private AuditService auditService;

    @Autowired
    private IDesignationDAO designationDAO;

    @Autowired
    private TbOrgDesignationService tbOrgDesignationService;

    @Override
    @Transactional
    public DesignationBean findById(final Long dsgid) {
        final Designation designationEntity = designationJpaRepository.findOne(dsgid);
        return designationServiceMapper.mapDesignationEntityToDesignation(designationEntity);
    }

    @Override
    @Transactional
    public List<DesignationBean> findAll() {
        final Iterable<Designation> entities = designationJpaRepository.findAll();
        final List<DesignationBean> beans = new ArrayList<>();
        for (final Designation designationEntity : entities) {
            beans.add(designationServiceMapper.mapDesignationEntityToDesignation(designationEntity));
        }

        return beans;
    }

    @Override
    @Transactional
    public DesignationBean create(final DesignationBean designation) {
        Designation designationEntity = new Designation();
        Organisation sessionOrg = UserSession.getCurrent().getOrganisation();
        Long sessEmpId = UserSession.getCurrent().getEmployee().getEmpId();
        int langId = UserSession.getCurrent().getLanguageId();

        if (null != designation.getDsgid()) {
            designationEntity = designationJpaRepository.findOne(designation.getDsgid());
            designationEntity.setUserId(sessEmpId);
            designationEntity.setLgIpMac(designation.getLgIpMac());

        }
        mapBeanToEntity(designation, designationEntity);
        final Designation designationEntitySaved = designationJpaRepository.save(designationEntity);

        final TbOrgDesignation tbOrgDesignationMap = new TbOrgDesignation();
        tbOrgDesignationMap.setUserId(sessEmpId);
        tbOrgDesignationMap.setDsgid(designationEntitySaved.getDsgid());
        tbOrgDesignationMap.setLmoddate(new Date());
        tbOrgDesignationMap.setOrgid(sessionOrg.getOrgid());
        tbOrgDesignationMap.setLangId(Long.valueOf(langId));
        tbOrgDesignationMap.setLgIpMac(designation.getLgIpMac());

        final List<TbOrgDesignation> tbOrgDesignationMapList = new ArrayList<>();
        tbOrgDesignationMapList.add(tbOrgDesignationMap);
        tbOrgDesignationService.createDesgOrgData(tbOrgDesignationMap, tbOrgDesignationMapList);

        // AUDIT CODE START
        if (designationEntitySaved != null) {
            final DesignationHistory designationHistory = new DesignationHistory();
            designationHistory.setStatus(MainetConstants.FlagA);
            auditService.createHistory(designationEntitySaved, designationHistory);
        }
        // AUDIT CODE END
        return designationServiceMapper.mapDesignationEntityToDesignation(designationEntitySaved);
    }

    /**
     * @param designation
     * @param designationEntity
     */
    private void mapBeanToEntity(final DesignationBean designation, final Designation designationEntity) {
        designationEntity.setUserId(Long.valueOf(UserSession.getCurrent().getEmployee().getEmpId()));
        designationEntity.setLmoddate(new Date());
        designationEntity.setDsgdescription(designation.getDsgdescription());
        designationEntity.setDsgname(designation.getDsgname());
        designationEntity.setDsgid(designation.getDsgid());
        designationEntity.setDsgnameReg(designation.getDsgnameReg());
        designationEntity.setDsgshortname(designation.getDsgshortname());
        designationEntity.setIsdeleted(designation.getIsdeleted());
    }

    @Override
    @Transactional
    public DesignationBean update(final DesignationBean designation, final Long updatedBy) {
        final Designation designationEntity = designationJpaRepository.findOne(designation.getDsgid());
        designationEntity.setUpdatedDate(new Date());
        designationEntity.setUpdatedBy(updatedBy);
        designationEntity.setDsgdescription(designation.getDsgdescription());
        designationEntity.setDsgname(designation.getDsgname());
        designationEntity.setDsgnameReg(designation.getDsgnameReg());
        designationEntity.setIsdeleted(designation.getIsdeleted());
        designationEntity.setLgIpMacUpd(designation.getLgIpMacUpd());
        final Designation designationEntitySaved = designationJpaRepository.save(designationEntity);
        return designationServiceMapper.mapDesignationEntityToDesignation(designationEntitySaved);
    }

    public DesignationJpaRepository getDesignationJpaRepository() {
        return designationJpaRepository;
    }

    public void setDesignationJpaRepository(final DesignationJpaRepository designationJpaRepository) {
        this.designationJpaRepository = designationJpaRepository;
    }

    public DesignationServiceMapper getDesignationServiceMapper() {
        return designationServiceMapper;
    }

    public void setDesignationServiceMapper(final DesignationServiceMapper designationServiceMapper) {
        this.designationServiceMapper = designationServiceMapper;
    }

    @Override
    @Transactional
    public List<DesignationBean> getDesignByDeptId(final Long deptId, final Long orgId) {
        final List<Designation> entities = designationJpaRepository.findByDeptid(orgId);
        final List<DesignationBean> beans = new ArrayList<>();
        for (final Designation designationEntity : entities) {
            beans.add(designationServiceMapper.mapDesignationEntityToDesignation(designationEntity));
        }
        return beans;
    }

    @Override
    @Transactional
    public List<DesignationBean> getDesignByOrgId(final Long orgId) {
        final List<Designation> entities = designationJpaRepository.findDeptByOrgId(orgId);
        Set<Designation> set = new HashSet<>(entities);
        entities.clear();
        entities.addAll(set);
        final List<DesignationBean> beans = new ArrayList<>();
        for (final Designation designationEntity : entities) {
            beans.add(designationServiceMapper.mapDesignationEntityToDesignation(designationEntity));
        }
        return beans;
    }

    /*
     * (non-Javadoc)
     * @see com.abm.mainetservice.web.masters.designation.business.service.
     * DesignationService#validateDsgnFrmOrgDsgMaster(java.lang.Long) This method validate designation Id from Org-Desg Master
     * Table.
     */
    @Override
    @Transactional
    public boolean validateDsgnFrmOrgDsgMaster(final Long dsgid, final Long orgid) {
        final List<TbOrgDesignationEntity> dsgOrgMapEntityList = designationJpaRepository.queryDataFrmMasterTable(dsgid,
                orgid);
        boolean isValidForDelete = false;
        if (dsgOrgMapEntityList.size() == 0) {
            isValidForDelete = true;
        }
        return isValidForDelete;

    }

    @Override
    @Transactional
    public boolean saveDesignationLocation(final Organisation organisation, final Employee employee,
            final Designation designation) {
        designationDAO.saveOrUpdate(designation);
        return true;
    }

    @Override
    @Transactional(readOnly = true)
    public List<Designation> getAllDesignationByDesgName(final String desgName) {

        return designationDAO.getAllDesignationByDesgName(desgName);
    }

    @Transactional
    public String getDesignationName(final long desgId) {
        return designationDAO.getDesignationName(desgId);
    }

    @Override
    @Transactional
    public Designation findByName(final String dsgName) {
        final Designation designationEntity = designationJpaRepository.findByName(dsgName);
        return designationEntity;
    }

    @Override
    public Designation findByShortname(final String shortName) {
        final Designation designationEntity = designationJpaRepository.findByShortName(shortName);
        return designationEntity;
    }

    @Override
    public boolean findByOrgIdDestId(Long orgId, Long dsgId) {
        boolean isMapped = false;
        int cont = designationJpaRepository.findByDestId(orgId, dsgId);
        if (cont > 0) {
            isMapped = true;
        }
        return isMapped;
    }

    @Override
    @Transactional
    public List<DesignationBean> findDesgByOrgId(final Long orgId) {
        final List<Designation> entities = designationJpaRepository.findDesgByOrgId(orgId);
        Set<Designation> set = new HashSet<>(entities);
        entities.clear();
        entities.addAll(set);
        final List<DesignationBean> beans = new ArrayList<>();
        for (final Designation designationEntity : entities) {
            beans.add(designationServiceMapper.mapDesignationEntityToDesignation(designationEntity));
        }
        return beans;
    }
}
