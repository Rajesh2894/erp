/*
 * Created on 11 May 2016 ( Time 12:03:32 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.mapper;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.domain.TbComparamMasEntity;
import com.abm.mainet.common.domain.TbComparamMasHistEntity;
import com.abm.mainet.common.master.dto.TbComparamMasHist;
import com.abm.mainet.common.utility.AbstractServiceMapper;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TbComparamMasHistServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public TbComparamMasHistServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'TbComparamMasHistEntity' to 'TbComparamMasHist'
     * @param tbComparamMasHistEntity
     */
    public TbComparamMasHist mapTbComparamMasHistEntityToTbComparamMasHist(
            final TbComparamMasHistEntity tbComparamMasHistEntity) {
        if (tbComparamMasHistEntity == null) {
            return null;
        }

        // --- Generic mapping
        final TbComparamMasHist tbComparamMasHist = map(tbComparamMasHistEntity, TbComparamMasHist.class);

        // --- Link mapping ( link to TbComparamMas )
        if (tbComparamMasHistEntity.getTbComparamMas() != null) {
            tbComparamMasHist.setCpmId(tbComparamMasHistEntity.getTbComparamMas().getCpmId());
        }
        return tbComparamMasHist;
    }

    /**
     * Mapping from 'TbComparamMasHist' to 'TbComparamMasHistEntity'
     * @param tbComparamMasHist
     * @param tbComparamMasHistEntity
     */
    public void mapTbComparamMasHistToTbComparamMasHistEntity(final TbComparamMasHist tbComparamMasHist,
            final TbComparamMasHistEntity tbComparamMasHistEntity) {
        if (tbComparamMasHist == null) {
            return;
        }

        // --- Generic mapping
        map(tbComparamMasHist, tbComparamMasHistEntity);

        // --- Link mapping ( link : tbComparamMasHist )
        if (hasLinkToTbComparamMas(tbComparamMasHist)) {
            final TbComparamMasEntity tbComparamMas1 = new TbComparamMasEntity();
            tbComparamMas1.setCpmId(tbComparamMasHist.getCpmId());
            tbComparamMasHistEntity.setTbComparamMas(tbComparamMas1);
        } else {
            tbComparamMasHistEntity.setTbComparamMas(null);
        }

    }

    /**
     * Verify that TbComparamMas id is valid.
     * @param TbComparamMas TbComparamMas
     * @return boolean
     */
    private boolean hasLinkToTbComparamMas(final TbComparamMasHist tbComparamMasHist) {
        if (tbComparamMasHist.getCpmId() != null) {
            return true;
        }
        return false;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(final ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}