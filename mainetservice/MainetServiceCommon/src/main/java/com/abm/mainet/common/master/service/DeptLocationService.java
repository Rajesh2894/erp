/*
 * Created on 13 Apr 2016 ( Time 13:12:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.service;

import java.util.List;

import com.abm.mainet.common.domain.LocationMasEntity;
import com.abm.mainet.common.master.dto.TbDepartment;
import com.abm.mainet.common.master.dto.TbDeptLocation;

/**
 * Business Service Interface for entity TbDeptLocation.
 */
public interface DeptLocationService {

    /**
     * Loads an entity from the database using its Primary Key
     * @param mapid
     * @return entity
     */
    TbDeptLocation findById(Long mapid);

    /**
     * Loads all entities.
     * @return all entities
     */
    List<TbDeptLocation> findAll();

    /**
     * Saves the given entity in the database (create or update)
     * @param entity
     * @return entity
     */
    TbDeptLocation save(TbDeptLocation entity);

    /**
     * Updates the given entity in the database
     * @param entity
     * @return
     */
    TbDeptLocation update(TbDeptLocation entity);

    /**
     * Creates the given entity in the database
     * @param entity
     * @return
     */
    TbDeptLocation create(TbDeptLocation entity);

    /**
     * Deletes an entity using its Primary Key
     * @param mapid
     */
    void delete(Long mapid);

    /**
     * @param l
     * @return
     */
    List<LocationMasEntity> findLocationList(long l);

    TbDeptLocation saveDeptLocationData(TbDeptLocation deptLocationMap, Long orgId, int langId, Long empId);

    /**
     * @param orgId
     * @param locId
     * @return
     */
    List<TbDepartment> getAllDeptList(long orgId, Long locId);

    /**
     * @param deptLocationMap
     * @param orgId
     * @param langId
     * @param empId
     * @return
     */
    TbDeptLocation saveDeptLocationDataAfterDelete(
            TbDeptLocation deptLocationMap, Long orgId, int langId, Long empId);

    /**
     * @param orgId
     * @param locId
     * @return
     */
    long getAllDeptListcount(long orgId, Long locId);

    String getEmpCount(List<TbDeptLocation> tbDepLocMapList, Long orgId,
            Long dpDeptid);

    /**
     * @param orgId
     * @param locId
     * @return
     */
    int getDeptLocationCount(Long orgId, Long locId);
}
