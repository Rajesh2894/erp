/*
 * Created on 6 Aug 2015 ( Time 16:35:26 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.service;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.abm.mainet.common.domain.TbComparentMasEntity;
import com.abm.mainet.common.master.dto.TbComparentMas;
import com.abm.mainet.common.master.mapper.TbComparentMasServiceMapper;
import com.abm.mainet.common.master.repository.TbComparentMasJpaRepository;

/**
 * Implementation of TbComparentMasService
 */
@Component
@Transactional
public class TbComparentMasServiceImpl implements TbComparentMasService {

    @Resource
    private TbComparentMasJpaRepository tbComparentMasJpaRepository;

    @Resource
    private TbComparentMasServiceMapper tbComparentMasServiceMapper;

    @Override
    public TbComparentMas findById(final Long comId) {
        final TbComparentMasEntity tbComparentMasEntity = tbComparentMasJpaRepository.findOne(comId);
        return tbComparentMasServiceMapper.mapTbComparentMasEntityToTbComparentMas(tbComparentMasEntity);
    }

    @Override
    public TbComparentMas update(final TbComparentMas tbComparentMas) {
        final TbComparentMasEntity tbComparentMasEntity = tbComparentMasJpaRepository.findOne(tbComparentMas.getComId());
        tbComparentMasServiceMapper.mapTbComparentMasToTbComparentMasEntity(tbComparentMas, tbComparentMasEntity);
        final TbComparentMasEntity tbComparentMasEntitySaved = tbComparentMasJpaRepository.save(tbComparentMasEntity);
        return tbComparentMasServiceMapper.mapTbComparentMasEntityToTbComparentMas(tbComparentMasEntitySaved);
    }

    public TbComparentMasJpaRepository getTbComparentMasJpaRepository() {
        return tbComparentMasJpaRepository;
    }

    public void setTbComparentMasJpaRepository(final TbComparentMasJpaRepository tbComparentMasJpaRepository) {
        this.tbComparentMasJpaRepository = tbComparentMasJpaRepository;
    }

    public TbComparentMasServiceMapper getTbComparentMasServiceMapper() {
        return tbComparentMasServiceMapper;
    }

    public void setTbComparentMasServiceMapper(final TbComparentMasServiceMapper tbComparentMasServiceMapper) {
        this.tbComparentMasServiceMapper = tbComparentMasServiceMapper;
    }

    @Override
    public List<TbComparentMas> findComparentMasDataById(final Long cpmId, final Long orgId) {

        final List<TbComparentMasEntity> entities = tbComparentMasJpaRepository.findComparentMasDataById(cpmId, orgId);
        final List<TbComparentMas> beans = new ArrayList<>();

        for (final TbComparentMasEntity tbComparentMasEntity : entities) {
            beans.add(tbComparentMasServiceMapper.mapTbComparentMasEntityToTbComparentMas(tbComparentMasEntity));
        }

        return beans;
    }

    /*
     * (non-Javadoc)
     * @see com.abm.mainetservice.web.masters.prefix.business.service.TbComparentMasService#findDataByCpmIdLevel(java.lang.Long,
     * long)
     */
    @Override
    public TbComparentMas findDataByCpmIdLevel(final Long cpmId, final long orgid) {
        final TbComparentMasEntity tbComparentMasEntity = tbComparentMasJpaRepository.findDataByCpmIdLevel(cpmId, orgid);
        return tbComparentMasServiceMapper.mapTbComparentMasEntityToTbComparentMas(tbComparentMasEntity);
    }

    @Override
    @Transactional
    public TbComparentMasEntity create(final TbComparentMasEntity entity) {
        tbComparentMasJpaRepository.save(entity);
        return entity;
    }

    @Override
    public List<TbComparentMas> findComparentMasDataByCpmId(final Long cpmId) {
        final List<TbComparentMasEntity> tbComparentMasEntity = tbComparentMasJpaRepository.findComparentMasDataByCpmId(cpmId);
        final List<TbComparentMas> tbComparentMasList = new ArrayList<>();
        for (final TbComparentMasEntity tbComparentMas : tbComparentMasEntity) {
            tbComparentMasList.add(tbComparentMasServiceMapper.mapTbComparentMasEntityToTbComparentMas(tbComparentMas));
        }
        return tbComparentMasList;
    }

}
