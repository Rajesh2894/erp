/*
 * Created on 18 Jun 2016 ( Time 16:02:19 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.service;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.abm.mainet.common.domain.BankAccountMasterEntity;
import com.abm.mainet.common.domain.BankMasterEntity;
import com.abm.mainet.common.dto.TbBankmaster;
import com.abm.mainet.common.integration.acccount.dto.BankAccountMasterDto;
import com.abm.mainet.common.integration.acccount.repository.AccountFundMasterJpaRepository;
import com.abm.mainet.common.integration.acccount.repository.TbBankmasterJpaRepository;
import com.abm.mainet.common.mapper.TbBankmasterServiceMapper;
import com.abm.mainet.common.master.repository.TbCustbanksJpaRepository;

/**
 * Implementation of TbBankmasterService
 */
@Component
@Transactional
public class TbBankmasterServiceImpl implements TbBankmasterService {

    @Resource
    private TbBankmasterJpaRepository tbBankmasterJpaRepository;
    @Resource
    private TbBankmasterServiceMapper tbBankmasterServiceMapper;

    @Resource
    private TbCustbanksJpaRepository tbCustbanksJpaRepository;

    @Resource
    AccountFundMasterJpaRepository accountFundMasterJpaRepository;

    @Override
    public TbBankmaster findById(final Long bmBankid, final Long orgid) {

    	TbBankmaster bankMaster = new TbBankmaster();
    	BankMasterEntity bankEntity = tbBankmasterJpaRepository.findOne(bmBankid);
    	if(bankEntity != null) {
    		bankMaster.setBmBankname(bankEntity.getBank());
        	bankMaster.setBmBankbranch(bankEntity.getBranch());
        	bankMaster.setBmBankcode(bankEntity.getIfsc());
    	}
    	return bankMaster;
    }

    @Override
    public List<Object[]> findAll(final Long orgId) {
        return null;
    }

    @Override
    public TbBankmaster create(final TbBankmaster tbBankmaster) {
        return null;
    }

    @Override
    public TbBankmaster update(final TbBankmaster tbBankmaster) {
        return null;
    }

    @Override
    public void delete(final Long bmBankid, final Long orgid) {

        tbBankmasterJpaRepository.delete(bmBankid);
    }

    public TbBankmasterJpaRepository getTbBankmasterJpaRepository() {
        return tbBankmasterJpaRepository;
    }

    public void setTbBankmasterJpaRepository(final TbBankmasterJpaRepository tbBankmasterJpaRepository) {
        this.tbBankmasterJpaRepository = tbBankmasterJpaRepository;
    }

    public TbBankmasterServiceMapper getTbBankmasterServiceMapper() {
        return tbBankmasterServiceMapper;
    }

    public void setTbBankmasterServiceMapper(final TbBankmasterServiceMapper tbBankmasterServiceMapper) {
        this.tbBankmasterServiceMapper = tbBankmasterServiceMapper;
    }

    /*
     * (non-Javadoc)
     * @see com.abm.mainet.account.service.TbBankmasterService#validateBankCode(java.lang.String)
     */
    @Override
    public int validateBankCode(final String bankCode, final Long orgid) {
        final int totalBankCodeCount = 0;
        return totalBankCodeCount;
    }

    /*
     * (non-Javadoc)
     * @see com.abm.mainetservice.account.transaction.service. AccountContraVoucherEntryService#getBankIdList(java.lang.Long)
     */
    @Override
    @Transactional
    public List<Object[]> getActiveBankAccountList(final Long orgId, final Long statusId) {

        return tbBankmasterJpaRepository.getActiveBankAccountList(orgId, statusId);
    }

    @Override
    @Transactional
    public List<Object[]> getBankAccountPayment(final Long orgId, final Long bankAccountId) {

        return tbBankmasterJpaRepository.getActiveBankAccount(orgId, bankAccountId);
    }

    @Override
    public String getBankNameByBankId(final Long bankId) {

        return tbBankmasterJpaRepository.getBankNameByBankId(bankId);
    }

    @Override
    public List<Object[]> getBankAccountNames(final Long bankAccountId) {
        return tbBankmasterJpaRepository.getBankAccountNames(bankAccountId);
    }

    /*
     * @Override
     * @Transactional public Long getActiveUlbBankAccountId(final Long orgId, final Long statusId, final Long bmBankid) { return
     * tbBankmasterJpaRepository.getActiveUlbBankAccountId(orgId, statusId, bmBankid); }
     */

    @Override
    @Transactional
    public List<Object[]> getBankBranchOrg(Long bankAccountId, Long orgId) {

        return tbBankmasterJpaRepository.getBankBranchOrg(bankAccountId, orgId);
    }

    @Override
    public List<BankAccountMasterDto> findByUlbBankId(final long bmBankid, final long orgId) {
        final List<BankAccountMasterDto> beans = new ArrayList<>(0);
        BankAccountMasterDto account = null;

        final List<BankAccountMasterEntity> entity = tbBankmasterJpaRepository.getBankList(bmBankid, orgId);
        for (final BankAccountMasterEntity data : entity) {
            account = new BankAccountMasterDto();
            account.setBaAccountNo(data.getBaAccountNo());
            account.setBaAccountId(data.getBaAccountId());
            account.setBaAccountName(data.getBaAccountName());
            beans.add(account);
        }
        return beans;
    }

    @Override
    public List<Object[]> findActiveBankList() {
        return tbBankmasterJpaRepository.getActiveBankList();
    }

	@Override
	public List<BankAccountMasterEntity> getActiveBankAccountDetailsByOrgId(Long orgId, Long accountActiveStatusId) {
		// TODO Auto-generated method stub
		return tbBankmasterJpaRepository.getActiveBankAccountDetailsByOrgId(orgId, accountActiveStatusId);
	}
	
}
