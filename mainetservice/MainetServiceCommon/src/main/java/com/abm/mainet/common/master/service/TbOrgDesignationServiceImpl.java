/*
 * Created on 6 Apr 2016 ( Time 17:24:22 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.service;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.abm.mainet.common.constant.MainetConstants;
import com.abm.mainet.common.domain.Designation;
import com.abm.mainet.common.domain.TbOrgDesignationEntity;
import com.abm.mainet.common.master.dto.DesignationBean;
import com.abm.mainet.common.master.dto.TbOrgDesignation;
import com.abm.mainet.common.master.mapper.TbOrgDesignationServiceMapper;
import com.abm.mainet.common.master.repository.TbOrgDesignationJpaRepository;
import com.abm.mainet.common.service.DesignationOrgMapProvisionService;
import com.abm.mainet.common.utility.UserSession;
import com.abm.mainet.common.utility.Utility;

/**
 * Implementation of TbOrgDesignationService
 */
@Component
@Transactional
public class TbOrgDesignationServiceImpl implements TbOrgDesignationService {

    @Resource
    private TbOrgDesignationJpaRepository tbOrgDesignationJpaRepository;

    @Resource
    private TbOrgDesignationServiceMapper tbOrgDesignationServiceMapper;

    @Resource
    private DesignationOrgMapProvisionService desigOrgMapProvisionService;

    @Resource
    private DesignationService designationService;

    @Override
    public TbOrgDesignation findById(final Long mapId) {
        final TbOrgDesignationEntity tbOrgDesignationEntity = tbOrgDesignationJpaRepository.findOne(mapId);
        return tbOrgDesignationServiceMapper.mapTbOrgDesignationEntityToTbOrgDesignation(tbOrgDesignationEntity);
    }

    @Override
    public TbOrgDesignation update(final TbOrgDesignation tbOrgDesignation) {
        final TbOrgDesignationEntity tbOrgDesignationEntity = tbOrgDesignationJpaRepository.findOne(tbOrgDesignation.getMapId());
        tbOrgDesignationServiceMapper.mapTbOrgDesignationToTbOrgDesignationEntity(tbOrgDesignation, tbOrgDesignationEntity);
        final TbOrgDesignationEntity tbOrgDesignationEntitySaved = tbOrgDesignationJpaRepository.save(tbOrgDesignationEntity);
        TbOrgDesignation savedMapDto = tbOrgDesignationServiceMapper
                .mapTbOrgDesignationEntityToTbOrgDesignation(tbOrgDesignationEntitySaved);

        /**
         * this service is used to push designation organization mapping data to GRP Application if GRP posting flag is 'Y'. this
         * flag is configured in serviceConfiguration.properties
         */
        desigOrgMapProvisionService.updateDesigOrgMapping(savedMapDto);

        return savedMapDto;
    }

    @Override
    @Transactional
    public void deleteMap(final Long mapId) {
        final TbOrgDesignationEntity deptOrgMapEntity = tbOrgDesignationJpaRepository.findOne(mapId);
        tbOrgDesignationJpaRepository.delete(deptOrgMapEntity);

        /**
         * this service is used to push designation organization mapping data to GRP Application if GRP posting flag is 'Y'. this
         * flag is configured in serviceConfiguration.properties
         */
        TbOrgDesignation deletedMapDto = tbOrgDesignationServiceMapper
                .mapTbOrgDesignationEntityToTbOrgDesignation(deptOrgMapEntity);
        // inactive mapping status
        deletedMapDto.setMapStatus(MainetConstants.Common_Constant.INACTIVE_FLAG);
        desigOrgMapProvisionService.updateDesigOrgMapping(deletedMapDto);
    }

    public TbOrgDesignationJpaRepository getTbOrgDesignationJpaRepository() {
        return tbOrgDesignationJpaRepository;
    }

    public void setTbOrgDesignationJpaRepository(final TbOrgDesignationJpaRepository tbOrgDesignationJpaRepository) {
        this.tbOrgDesignationJpaRepository = tbOrgDesignationJpaRepository;
    }

    public TbOrgDesignationServiceMapper getTbOrgDesignationServiceMapper() {
        return tbOrgDesignationServiceMapper;
    }

    public void setTbOrgDesignationServiceMapper(final TbOrgDesignationServiceMapper tbOrgDesignationServiceMapper) {
        this.tbOrgDesignationServiceMapper = tbOrgDesignationServiceMapper;
    }

    /*
     * (non-Javadoc)
     * @see
     * com.abm.mainetservice.web.masters.orgdesignation.business.service.TbOrgDesignationService#findAllByOrigId(java.lang.Long)
     */
    @Override
    public List<TbOrgDesignation> findAllByOrigId(final Long orgId) {

        final List<TbOrgDesignation> designationList = new ArrayList<>();
        TbOrgDesignationEntity tbOrgDesignationEntity = null;
        Designation designation = null;
        TbOrgDesignation tbOrgDesignation = null;

        final List<Object> objList = tbOrgDesignationJpaRepository.findAllByOrigId(orgId);

        final int dataSize = objList.size();
        for (int iCounter = 0; iCounter < dataSize; iCounter++) {
            final Object[] objData = (Object[]) objList.get(iCounter);
            designation = (Designation) objData[0];
            tbOrgDesignationEntity = (TbOrgDesignationEntity) objData[1];
            tbOrgDesignation = tbOrgDesignationServiceMapper.mapTbOrgDesignationEntityToTbOrgDesignation(tbOrgDesignationEntity);

            tbOrgDesignation.setDesgName(designation.getDsgname());
            tbOrgDesignation.setDesgName(designation.getDsgname());
            tbOrgDesignation.setDesgNameReg(designation.getDsgnameReg());
            tbOrgDesignation.setDesgShortName(designation.getDsgshortname());
            tbOrgDesignation.setMapId(tbOrgDesignationEntity.getMapId());
            designationList.add(tbOrgDesignation);
        }

        return designationList;
    }

    /*
     * (non-Javadoc)
     * @see com.abm.mainetservice.web.masters.orgdesignation.business.service.TbOrgDesignationService#createDesgOrgData(com.abm.
     * mainetservice.web.masters.orgdesignation.bean.TbOrgDesignation, java.util.List)
     */
    @Override
    public TbOrgDesignation createDesgOrgData(final TbOrgDesignation tbOrgDesignation,
            final List<TbOrgDesignation> orgDesignationList) {

        TbOrgDesignationEntity orgDesg = null;
        Designation desg = null;
        final Date date = new Date();

        for (final TbOrgDesignation orgDesignation : orgDesignationList) {
            if (orgDesignation.getMapId() == null) {
                orgDesg = new TbOrgDesignationEntity();
                desg = new Designation();

                desg.setDsgid(orgDesignation.getDsgid());
                orgDesignation.setOrgid(tbOrgDesignation.getOrgid());
                orgDesignation.setUserId(UserSession.getCurrent().getEmployee().getEmpId());
                orgDesignation.setLangId(Long.valueOf(UserSession.getCurrent().getLanguageId()));
                orgDesignation.setLmoddate(date);
                orgDesignation.setLgIpMac(Utility.getMacAddress());

                tbOrgDesignationServiceMapper.mapTbOrgDesignationToTbOrgDesignationEntity(tbOrgDesignation, orgDesg);
                orgDesg.setDesignation(desg);
                orgDesg.setLmoddate(date);
                orgDesg.setLgIpMac(Utility.getMacAddress());
                orgDesg.setLangId(Long.valueOf(UserSession.getCurrent().getLanguageId()));
                orgDesg.setUserId(UserSession.getCurrent().getEmployee().getEmpId());
                orgDesg.setMapStatus(MainetConstants.FlagA);
                TbOrgDesignationEntity savedMapEntity = tbOrgDesignationJpaRepository.save(orgDesg);
                TbOrgDesignation savedMapDto = tbOrgDesignationServiceMapper
                        .mapTbOrgDesignationEntityToTbOrgDesignation(savedMapEntity);

                DesignationBean desigBean = designationService.findById(savedMapDto.getDsgid());
                savedMapDto.setDesgName(desigBean.getDsgname());
                savedMapDto.setDesgNameReg(desigBean.getDsgnameReg());
                savedMapDto.setDesigDesc(desigBean.getDsgdescription());
                savedMapDto.setDesgShortName(desigBean.getDsgshortname());

                /**
                 * this service is used to push designation organization mapping data to GRP Application if GRP posting flag is
                 * 'Y'. push only new mapped designation
                 * this flag is configured in serviceConfiguration.properties
                 */
                desigOrgMapProvisionService.createDesigOrgMapping(savedMapDto);

            } else {
                orgDesg = new TbOrgDesignationEntity();
                desg = new Designation();

                desg.setDsgid(orgDesignation.getDsgid());
                orgDesignation.setUpdatedBy(UserSession.getCurrent().getEmployee().getEmpId());
                orgDesignation.setLgIpMacUpd(Utility.getMacAddress());
                orgDesignation.setUpdatedDate(date);

                tbOrgDesignationServiceMapper.mapTbOrgDesignationToTbOrgDesignationEntity(tbOrgDesignation, orgDesg);
                orgDesg.setDesignation(desg);
                orgDesg.setMapId(orgDesignation.getMapId());
                orgDesg.setUserId(UserSession.getCurrent().getEmployee().getEmpId());
                orgDesg.setLmoddate(orgDesignation.getLmoddate());
                orgDesg.setLgIpMac(orgDesignation.getLgIpMac());
                orgDesg.setLangId(Long.valueOf(UserSession.getCurrent().getLanguageId()));
                orgDesg.setUpdatedBy(UserSession.getCurrent().getEmployee().getEmpId());
                orgDesg.setLgIpMacUpd(Utility.getMacAddress());
                orgDesg.setUpdatedDate(date);
                orgDesg.setMapStatus(orgDesignation.getMapStatus());
            }

        }

        return tbOrgDesignation;
    }

}
