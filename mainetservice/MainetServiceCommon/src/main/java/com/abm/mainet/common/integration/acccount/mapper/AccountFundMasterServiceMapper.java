/*
 * Created on 7 Jun 2016 ( Time 17:15:22 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.integration.acccount.mapper;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.integration.acccount.domain.AccountFundMasterEntity;
import com.abm.mainet.common.integration.acccount.domain.TbAcCodingstructureDetEntity;
import com.abm.mainet.common.integration.acccount.dto.AccountFundMasterBean;
import com.abm.mainet.common.utility.AbstractServiceMapper;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class AccountFundMasterServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public AccountFundMasterServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'TbAcFundMasterEntity' to 'TbAcFundMaster'
     *
     * @param tbAcFundMasterEntity
     */

    public AccountFundMasterBean mapTbAcFundMasterEntityToTbAcFundMaster(final AccountFundMasterEntity tbAcFundMasterEntity,
            final Boolean isparent) {

        if (tbAcFundMasterEntity == null) {
            return null;
        }

        final AccountFundMasterBean tbAcFundMaster = new AccountFundMasterBean();
        tbAcFundMaster.setFundId(tbAcFundMasterEntity.getFundId());
        tbAcFundMaster.setFundCode(tbAcFundMasterEntity.getFundCode());
        tbAcFundMaster.setFundDesc(tbAcFundMasterEntity.getFundDesc());
        AccountFundMasterBean tbAcFundParentMaster = null;
        if (isparent) {
            tbAcFundMaster.setFundParentId(null);
        } else {
            tbAcFundParentMaster = new AccountFundMasterBean();
            map(tbAcFundMasterEntity.getFundParentId(), tbAcFundParentMaster);
            tbAcFundMaster.setFundParentId(tbAcFundParentMaster);
        }
        tbAcFundMaster.setFundCompositecode(tbAcFundMasterEntity.getFundCompositecode());
        tbAcFundMaster.setOrgid(tbAcFundMasterEntity.getOrgid());
        if (tbAcFundMasterEntity.getTbAcCodingstructureDet() != null) {
            tbAcFundMaster.setCodcofdetId(tbAcFundMasterEntity.getTbAcCodingstructureDet().getCodcofdetId());
        }
        return tbAcFundMaster;
    }

    /**
     * Mapping from 'TbAcFundMaster' to 'TbAcFundMasterEntity'
     *
     * @param tbAcFundMaster
     * @param tbAcFundMasterEntity
     */
    public void mapTbAcFundMasterToTbAcFundMasterEntity(final AccountFundMasterBean tbAcFundMaster,
            final AccountFundMasterEntity tbAcFundMasterEntity) {
        if (tbAcFundMaster == null) {
            return;
        }

        // --- Generic mapping
        map(tbAcFundMaster, tbAcFundMasterEntity);

        // --- Link mapping ( link : tbAcFundMaster )
        if (hasLinkToTbAcCodingstructureDet(tbAcFundMaster)) {
            final TbAcCodingstructureDetEntity tbAcCodingstructureDet1 = new TbAcCodingstructureDetEntity();
            tbAcCodingstructureDet1.setCodcofdetId(tbAcFundMaster.getCodcofdetId());
            tbAcFundMasterEntity.setTbAcCodingstructureDet(tbAcCodingstructureDet1);
        } else {
            tbAcFundMasterEntity.setTbAcCodingstructureDet(null);
        }

    }

    /**
     * Verify that TbAcCodingstructureDet id is valid.
     *
     * @param TbAcCodingstructureDet TbAcCodingstructureDet
     * @return boolean
     */
    private boolean hasLinkToTbAcCodingstructureDet(final AccountFundMasterBean tbAcFundMaster) {
        if (tbAcFundMaster.getCodcofdetId() != null) {
            return true;
        }
        return false;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(final ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}