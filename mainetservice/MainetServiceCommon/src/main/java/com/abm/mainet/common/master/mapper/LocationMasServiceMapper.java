/*
 * Created on 9 Dec 2015 ( Time 12:12:51 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.mapper;

import java.util.List;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.domain.LocationElectrolWZMapping;
import com.abm.mainet.common.domain.LocationMasEntity;
import com.abm.mainet.common.domain.LocationOperationWZMapping;
import com.abm.mainet.common.domain.LocationRevenueWZMapping;
import com.abm.mainet.common.domain.Organisation;
import com.abm.mainet.common.master.dto.LocElectrolWZMappingDto;
import com.abm.mainet.common.master.dto.LocOperationWZMappingDto;
import com.abm.mainet.common.master.dto.LocRevenueWZMappingDto;
import com.abm.mainet.common.master.dto.TbLocationMas;
import com.abm.mainet.common.utility.AbstractServiceMapper;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class LocationMasServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public LocationMasServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'TbLocationMasEntity' to 'TbLocationMas'
     * @param tbLocationMasEntity
     */
    public TbLocationMas mapTbLocationMasEntityToTbLocationMas(final LocationMasEntity tbLocationMasEntity) {
        if (tbLocationMasEntity == null) {
            return null;
        }

        final TbLocationMas tbLocationMas = map(tbLocationMasEntity, TbLocationMas.class);
        if (tbLocationMasEntity.getOrganisation() != null) {
            tbLocationMas.setOrgId(Long.valueOf(tbLocationMasEntity.getOrganisation().getOrgid()));
        }
        tbLocationMas.setLocElectrolWZMappingDto(
                mapLocationElectrolWZMappingToLocElectrolWZMappingDto(tbLocationMasEntity.getLocationElectrolWZMapping()));
        tbLocationMas.setLocOperationWZMappingDto(this
                .mapLocationOperationWZMappingToLocOperationWZMappingDto(tbLocationMasEntity.getLocationOperationWZMapping()));
        tbLocationMas.setLocRevenueWZMappingDto(
                mapLocationRevenueWZMappingToLocRevenueWZMappingDto(tbLocationMasEntity.getLocationRevenueWZMapping()));
        if (!tbLocationMasEntity.getLocationOperationWZMapping().isEmpty()) {
            tbLocationMasEntity.getLocationOperationWZMapping().get(0).setLocationMasEntity(tbLocationMasEntity);
        }
        if (!tbLocationMasEntity.getLocationRevenueWZMapping().isEmpty()) {
            tbLocationMasEntity.getLocationRevenueWZMapping().get(0).setLocationMasEntity(tbLocationMasEntity);
        }
        if (!tbLocationMasEntity.getLocationElectrolWZMapping().isEmpty()) {
            tbLocationMasEntity.getLocationElectrolWZMapping().get(0).setLocationMasEntity(tbLocationMasEntity);
        }

        return tbLocationMas;
    }

    /**
     * Mapping from 'TbLocationMas' to 'TbLocationMasEntity'
     * @param tbLocationMas
     * @param tbLocationMasEntity
     */
    public void mapTbLocationMasToTbLocationMasEntity(final TbLocationMas tbLocationMas,
            final LocationMasEntity tbLocationMasEntity) {
        if (tbLocationMas == null) {
            return;
        }
        map(tbLocationMas, tbLocationMasEntity);
        tbLocationMasEntity.setLocationRevenueWZMapping(
                mapLocRevenueWZMappingDtoToLocationRevenueWZMapping(tbLocationMas.getLocRevenueWZMappingDto()));
        tbLocationMasEntity.setLocationElectrolWZMapping(
                mapLocElectrolWZMappingDtoToLocationElectrolWZMapping(tbLocationMas.getLocElectrolWZMappingDto()));
        tbLocationMasEntity.setLocationOperationWZMapping(
                mapLocOperationWZMappingDtoToLocationOperationWZMapping(tbLocationMas.getLocOperationWZMappingDto()));
        if (tbLocationMasEntity.getLocationOperationWZMapping() != null) {
            tbLocationMasEntity.getLocationOperationWZMapping().get(0).setLocationMasEntity(tbLocationMasEntity);
        }
        if (tbLocationMasEntity.getLocationRevenueWZMapping() != null) {
            tbLocationMasEntity.getLocationRevenueWZMapping().get(0).setLocationMasEntity(tbLocationMasEntity);
        }
        if (tbLocationMasEntity.getLocationElectrolWZMapping() != null) {
            tbLocationMasEntity.getLocationElectrolWZMapping().get(0).setLocationMasEntity(tbLocationMasEntity);
        }
        if (hasLinkToTbOrganisation(tbLocationMas)) {
            final Organisation tbOrganisation1 = new Organisation();
            tbOrganisation1.setOrgid(tbLocationMas.getOrgId().longValue());
            tbLocationMasEntity.setOrganisation(tbOrganisation1);
        } else {
            tbLocationMasEntity.setOrganisation(null);
        }

    }

    /**
     * Verify that TbOrganisation id is valid.
     * @param TbOrganisation TbOrganisation
     * @return boolean
     */
    private boolean hasLinkToTbOrganisation(final TbLocationMas tbLocationMas) {
        if (tbLocationMas.getOrgId() != null) {
            return true;
        }
        return false;
    }

    public LocOperationWZMappingDto mapLocationOperationWZMappingToLocOperationWZMappingDto(
            final LocationOperationWZMapping revenueWZMappingEntity) {
        if (revenueWZMappingEntity == null) {
            return null;
        }
        final LocOperationWZMappingDto tbLocationMas = map(revenueWZMappingEntity, LocOperationWZMappingDto.class);
        return tbLocationMas;
    }

    public List<LocationOperationWZMapping> mapLocOperationWZMappingDtoToLocationOperationWZMapping(
            final List<LocOperationWZMappingDto> locOperationWZMappingDto) {
        if (locOperationWZMappingDto == null) {
            return null;
        }
        final List<LocationOperationWZMapping> adminWZMappingEntity = map(locOperationWZMappingDto,
                LocationOperationWZMapping.class);
        return adminWZMappingEntity;
    }

    public List<LocationElectrolWZMapping> mapLocElectrolWZMappingDtoToLocationElectrolWZMapping(
            final List<LocElectrolWZMappingDto> electrolWZMappingDto) {
        if (electrolWZMappingDto == null) {
            return null;
        }
        final List<LocationElectrolWZMapping> locationElectrolWZMapping = map(electrolWZMappingDto,
                LocationElectrolWZMapping.class);
        return locationElectrolWZMapping;
    }

    public List<LocationRevenueWZMapping> mapLocRevenueWZMappingDtoToLocationRevenueWZMapping(
            final List<LocRevenueWZMappingDto> revenueWZMappingDto) {
        if (revenueWZMappingDto == null) {
            return null;
        }
        final List<LocationRevenueWZMapping> locationRevenueWZMapping = map(revenueWZMappingDto, LocationRevenueWZMapping.class);
        return locationRevenueWZMapping;
    }

    public List<LocRevenueWZMappingDto> mapLocationRevenueWZMappingToLocRevenueWZMappingDto(
            final List<LocationRevenueWZMapping> revenueWZMappingEntity) {
        if (revenueWZMappingEntity == null) {
            return null;
        }
        final List<LocRevenueWZMappingDto> locRevenueWZMappingDto = map(revenueWZMappingEntity, LocRevenueWZMappingDto.class);
        return locRevenueWZMappingDto;
    }

    public List<LocElectrolWZMappingDto> mapLocationElectrolWZMappingToLocElectrolWZMappingDto(
            final List<LocationElectrolWZMapping> electrolWZMappingEntity) {
        if (electrolWZMappingEntity == null) {
            return null;
        }

        // --- Generic mapping
        final List<LocElectrolWZMappingDto> locElectrolWZMappingDto = map(electrolWZMappingEntity, LocElectrolWZMappingDto.class);
        return locElectrolWZMappingDto;
    }

    public List<LocOperationWZMappingDto> mapLocationOperationWZMappingToLocOperationWZMappingDto(
            final List<LocationOperationWZMapping> revenueWZMappingEntity) {
        if (revenueWZMappingEntity == null) {
            return null;
        }

        final List<LocOperationWZMappingDto> locOperationWZMappingDto = map(revenueWZMappingEntity,
                LocOperationWZMappingDto.class);
        return locOperationWZMappingDto;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(final ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}