package com.abm.mainet.common.integration.hrms.jaxws.client;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.1.14 2018-04-13T20:20:47.713+05:30 Generated source version: 3.1.14
 * 
 */
@WebServiceClient(name = "EmployeeServer", wsdlLocation = "file:/D:/Dev_Service/MainetServiceWeb/src/main/resources/employee.wsdl", targetNamespace = "urn:orangescape")
public class EmployeeServer_Service extends Service {

    public final static URL WSDL_LOCATION = null;

    public final static QName SERVICE = new QName("urn:orangescape", "EmployeeServer");
    public final static QName EmployeeServer = new QName("urn:orangescape", "EmployeeServer");
    static {
        /*
         * URL url = null; try { url = new URL( "file:/D:/Dev_Service/MainetServiceWeb/src/main/resources/employee.wsdl"); } catch
         * (MalformedURLException e) { java.util.logging.Logger.getLogger(EmployeeServer_Service.class.getName())
         * .log(java.util.logging.Level.INFO, "Can not initialize the default wsdl from {0}",
         * "file:/D:/Dev_Service/MainetServiceWeb/src/main/resources/employee.wsdl"); } WSDL_LOCATION = url;
         */}

    public EmployeeServer_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EmployeeServer_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EmployeeServer_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public EmployeeServer_Service(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public EmployeeServer_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public EmployeeServer_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return returns EmployeeServer
     */
    @WebEndpoint(name = "EmployeeServer")
    public EmployeeServer getEmployeeServer() {
        return super.getPort(EmployeeServer, EmployeeServer.class);
    }

    /**
     * 
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the
     * <code>features</code> parameter will have their default values.
     * @return returns EmployeeServer
     */
    @WebEndpoint(name = "EmployeeServer")
    public EmployeeServer getEmployeeServer(WebServiceFeature... features) {
        return super.getPort(EmployeeServer, EmployeeServer.class, features);
    }

}
