<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:p="http://www.springframework.org/schema/p" 
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">
		
    <context:annotation-config></context:annotation-config>
	




   <!--  <bean id="applicationConversionService" class="com.abm.mainetservice.web.convert.ConversionServiceFactoryBean"/> -->

	<!-- <annotation-driven /> enables the support of annotation configuration for Spring MVC controllers, -->
	<!-- as well as enabling Spring 3 type conversion anRapd formatting support. -->
	<!-- Also, support for JSR-303 Bean Validation is enabled by this tag. -->
    <!-- <mvc:annotation-driven conversion-service="applicationConversionService"/> -->
    
   <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
	<mvc:message-converters>
	   <bean  class="com.abm.mainet.common.utility.MappingJackson2HttpMessageConverter">
	         <property name="supportedMediaTypes" value="application/json"/>
	         <property name="objectMapper">
	              <bean class="com.abm.mainet.common.utility.HibernateAwareObjectMapper"/>  
	        </property>
	  </bean>
	</mvc:message-converters>

	</mvc:annotation-driven>
   
   <bean id="contentNegotiationManager"  class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="favorPathExtension" value="false" />
	    <property name="favorParameter" value="true" />
	    <property name="parameterName" value="mediaType" />
	    <property name="ignoreAcceptHeader" value="true"/>
	    <property name="useJaf" value="false"/>
	    <property name="defaultContentType" value="application/json" />
	    <property name="mediaTypes">
	             <map>
					<entry key="html" value="text/html" />
					<entry key="json" value="application/json" />
				</map>
	    </property>
    </bean>
     <bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
	
	<!-- static resources -->
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/script/**" location="/script/" />
	
    <!-- Enable this for integration of file upload functionality -->
<!--     <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver"/> -->
    
	<!-- Tiles -->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver">
	   <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean> 
	<bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts/layouts.xml</value>
				<value>/WEB-INF/views/**/views.xml</value>
				<value>/WEB-INF/tiles-defs.xml</value>
			</list>
		</property>
	</bean>
	
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
    <mvc:resources location="/, classpath:/META-INF/web-resources/" mapping="/resources/**"/>
	
	<mvc:default-servlet-handler/>

	<!-- Selects a static view for rendering without the need for an explicit controller -->
    <!-- <mvc:view-controller path="/" view-name="index"/> -->
    <mvc:view-controller path="/uncaughtException"/>
    <mvc:view-controller path="/resourceNotFound"/>
    <mvc:view-controller path="/dataAccessFailure"/>
    
    <mvc:interceptors>
     <bean class="com.abm.mainet.security.MultiLoginPreventInterceptor" /> 
	   <bean class="com.abm.mainet.security.GlobalRequestInterceptor" /> 
	   <bean class="com.abm.mainet.security.AuthenticationRequestInterceptor" />
	  <!--  <bean class="com.abm.mainet.security.OrganisationInterceptor" />  -->
    </mvc:interceptors>  
	
    <!-- This bean resolves specific types of exceptions to corresponding logical - view names for error views. 
    The default behaviour of DispatcherServlet - is to propagate all exceptions to the servlet 
    container: this will happen - here with all other types of exceptions. -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" p:defaultErrorView="uncaughtException">
        <property name="exceptionMappings">
            <props>
                <prop key=".DataAccessException">dataAccessFailure</prop>
                <prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
                <prop key=".TypeMismatchException">resourceNotFound</prop>
                <prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
            </props>
        </property>
    </bean>
	<import resource="classpath:/spring-webmvc-common.xml"/>
	<import resource="classpath:/spring-webmvc-account.xml"/>
	<import resource="classpath:/spring-webmvc-rnl.xml"/> 
	 <import resource="classpath:/spring-webmvc-mobile.xml"/>
	<import resource="classpath:/spring-webmvc-water.xml"/>
	<import resource="classpath:/spring-webmvc-agency.xml"/>
	<import resource="classpath:/spring-webmvc-care.xml"/> 
	<import resource="classpath:/spring-webmvc-workManagement.xml"/>  
	<import resource="classpath:/spring-webmvc-property.xml"/> 
	<import resource="classpath:/spring-webmvc-rti.xml"/>
 	<import resource="classpath:/spring-webmvc-assetManagement.xml"/> 
	 <import resource="classpath:/spring-webmvc-swm.xml"/>
 <import resource="classpath:/spring-webmvc-legal.xml"/>  
	<import resource="classpath:/spring-webmvc-tradeLicense.xml"/>
	<import resource="classpath:/spring-webmvc-socialSecurity.xml"/>
	<import resource="classpath:/spring-webmvc-council.xml"/>  
	<import resource="classpath:/spring-webmvc-adh.xml"/> 
	 <import resource="classpath:/spring-webmvc-sfac.xml"/>	 
	<!-- <import resource="classpath:/spring-webmvc-landEstate.xml"/>
	<import resource="classpath:/spring-webmvc-material-mgmt.xml"/>
	<import resource="classpath:/spring-webmvc-building-plan.xml"/> -->
	 
	
</beans>