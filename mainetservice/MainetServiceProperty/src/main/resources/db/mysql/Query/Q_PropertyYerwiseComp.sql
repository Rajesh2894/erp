**********Current Year******

select con_type11,count(distinct MN_ASS_no) count_of_prop,
 sum(ORIGINAL_TOTAL_CUR_DEMAND) ORIGINAL_TOTAL_CUR_DEMAND,
 sum(ORIGINAL_TOTAL_ARR_DEMAND) ORIGINAL_TOTAL_ARR_DEMAND,sum(total_demand) total_demand,
 /*sum(arr_colection) arr_coolection,sum(cur_colection) cur_colection,*/
 sum(total_collection) total_collection,
 sum(TOTAL_OUTSTANDING_AS_ON) TOTAL_OUTSTANDING_AS_ON from
 (select MN_ASS_no,A.ORGID,count(1),
 case when LOCATE(",", group_concat(DISTINCT c.cod_desc order by 1))>0 then 'Mixed'
 else group_concat(DISTINCT c.cod_desc order by 1) END  con_type11,
 group_concat(DISTINCT c.cod_id order by 1) con_type12,
 group_concat(DISTINCT d.cpd_desc order by 1) con_type22,
 group_concat(DISTINCT d.cpd_id order by 1) con_type222
 from tb_as_assesment_detail a,
 (select mn_ass_no,a.orgid,max(mn_ass_id) mn_ass_id from tb_as_assesment_mast a,tb_organisation b where a.orgid=b.ORGID
 AND a.orgid=(case when COALESCE(87,0)=0 then COALESCE(a.orgid,0) else COALESCE(87,0) end)  
 and B.ORG_CPD_ID_STATE=(CASE WHEN COALESCE(0,0)=0 THEN COALESCE(B.ORG_CPD_ID_STATE,0) ELSE COALESCE(0,0) END)
 AND B.ORG_CPD_ID_DIV=(CASE WHEN COALESCE(0,0)=0 THEN COALESCE(B.ORG_CPD_ID_DIV,0) ELSE COALESCE(0,0) END)
 AND B.ORG_CPD_ID_DIS=(CASE WHEN COALESCE(0,0)=0 THEN COALESCE(B.ORG_CPD_ID_DIS,0) ELSE COALESCE(0,0) END)
 group by mn_ass_no,a.orgid) b,tb_comparent_det c,tb_comparam_det d
 where a.orgid=b.orgid and a.mn_ass_id=b.mn_ass_id and MN_assd_usagetype1=c.cod_id and MN_assd_constru_type=d.cpd_id
 group by MN_ASS_no,A.ORGID /*having count(1)>1*/) x left join
 (SELECT TAX_ID,PRO_BM_FROMDT,B.ORGID,BM_IDNO,PRO_PROP_NO,
 COALESCE(PRO_BD_CUR_TAXAMT,0) AS ORIGINAL_TOTAL_CUR_DEMAND,
 COALESCE(PRO_BD_PRV_ARRAMT,0) AS ORIGINAL_TOTAL_ARR_DEMAND,
 COALESCE(PRO_BD_CUR_TAXAMT,0)+ COALESCE(PRO_BD_PRV_ARRAMT,0) total_demand,
 (COALESCE(PRO_BD_CUR_TAXAMT,0) - COALESCE(PRO_BD_CUR_BAL_TAXAMT,0)) cur_colection,
 (COALESCE(PRO_BD_PRV_ARRAMT,0) - COALESCE(PRO_BD_PRV_BAL_ARRAMT,0)) arr_colection,
 (COALESCE(PRO_BD_CUR_TAXAMT,0) - COALESCE(PRO_BD_CUR_BAL_TAXAMT,0)) + (COALESCE(PRO_BD_PRV_ARRAMT,0) - COALESCE(PRO_BD_PRV_BAL_ARRAMT,0)) total_collection,
 COALESCE(PRO_BD_CUR_BAL_TAXAMT,0) AS ORIGINAL_TOTAL_CUR_OUT,
 COALESCE(PRO_BD_PRV_BAL_ARRAMT,0) AS ORIGINAL_TOTAL_ARR_OUT,
 COALESCE(PRO_BD_CUR_BAL_TAXAMT,0) +  COALESCE(PRO_BD_PRV_BAL_ARRAMT,0) AS TOTAL_OUTSTANDING_AS_ON
 FROM TB_AS_PRO_BILL_DET A,(SELECT PRO_ASS_ID,ORGID,PRO_BM_IDNO,PRO_PROP_NO,PRO_BM_FROMDT
 FROM TB_AS_PRO_BILL_MAS
 WHERE PRO_BM_FROMDT BETWEEN (SELECT FA_FROMDATE FROM TB_FINANCIALYEAR WHERE CURDATE() BETWEEN FA_FROMDATE AND FA_TODATE)
 AND (SELECT FA_TODATE FROM TB_FINANCIALYEAR WHERE CURDATE() BETWEEN FA_FROMDATE AND FA_TODATE)
 and orgid=(case when COALESCE(0,0)=0 then COALESCE(orgid,0) else COALESCE(0,0) end)) B
 WHERE A.BM_IDNO=B.PRO_BM_IDNO and TAX_ID=(CASE WHEN COALESCE(0,0)=0 THEN COALESCE(TAX_ID,0) ELSE COALESCE(0,0) END)
 UNION ALL
 SELECT TAX_ID,MN_FROMDT,B.ORGID,BM_IDNO,MN_PROP_NO,
 COALESCE(BD_CUR_TAXAMT,0) AS ORIGINAL_TOTAL_CUR_DEMAND,
 COALESCE(BD_PRV_ARRAMT,0) AS ORIGINAL_TOTAL_ARR_DEMAND,
 COALESCE(BD_CUR_TAXAMT,0)+ COALESCE(BD_PRV_ARRAMT,0),
 (COALESCE(BD_CUR_TAXAMT,0) - COALESCE(BD_CUR_BAL_TAXAMT,0)) cur_coolection,
 (COALESCE(BD_PRV_ARRAMT,0) - COALESCE(BD_PRV_BAL_ARRAMT,0)) arr_coolection,
 (COALESCE(BD_CUR_TAXAMT,0) - COALESCE(BD_CUR_BAL_TAXAMT,0)) + (COALESCE(BD_PRV_ARRAMT,0) - COALESCE(BD_PRV_BAL_ARRAMT,0)) total_collection,
 COALESCE(BD_CUR_BAL_TAXAMT,0) AS ORIGINAL_TOTAL_CUR_OUT,
 COALESCE(BD_PRV_BAL_ARRAMT,0) AS ORIGINAL_TOTAL_ARR_OUT,
 COALESCE(BD_CUR_BAL_TAXAMT,0) +  COALESCE(BD_PRV_BAL_ARRAMT,0) AS TOTAL_OUTSTANDING_AS_ON
 FROM TB_AS_BILL_DET A , (SELECT MN_ASS_ID,ORGID,MN_BM_IDNO,MN_PROP_NO,MN_FROMDT
 FROM TB_AS_BILL_MAS WHERE MN_FROMDT BETWEEN (select FA_FROMDATE from
 (SELECT FA_FROMDATE FROM TB_FINANCIALYEAR WHERE CURDATE()  BETWEEN FA_FROMDATE AND FA_TODATE) 
 AND (SELECT FA_TODATE FROM TB_FINANCIALYEAR WHERE CURDATE() BETWEEN FA_FROMDATE AND FA_TODATE))
 and orgid=(case when COALESCE(87,0)=0 then COALESCE(orgid,0) else COALESCE(87,0) end)) B
 WHERE BM_IDNO=MN_BM_IDNO and TAX_ID=(CASE WHEN COALESCE(0,0)=0 THEN COALESCE(TAX_ID,0) ELSE COALESCE(0,0) END)) y 
 on x.MN_ASS_no=y.PRO_PROP_NO and x.orgid=y.orgid
 group by con_type11
 
 *************previous year*************
 select con_type11,count(distinct MN_ASS_no) count_of_prop,
 sum(ORIGINAL_TOTAL_CUR_DEMAND) ORIGINAL_TOTAL_CUR_DEMAND,
 sum(ORIGINAL_TOTAL_ARR_DEMAND) ORIGINAL_TOTAL_ARR_DEMAND,sum(total_demand) total_demand,
 /*sum(arr_colection) arr_coolection,sum(cur_colection) cur_colection,*/
 sum(total_collection) total_collection,
 sum(TOTAL_OUTSTANDING_AS_ON) TOTAL_OUTSTANDING_AS_ON from
 (select MN_ASS_no,A.ORGID,count(1),
 case when LOCATE(",", group_concat(DISTINCT c.cod_desc order by 1))>0 then 'Mixed'
 else group_concat(DISTINCT c.cod_desc order by 1) END  con_type11,
 group_concat(DISTINCT c.cod_id order by 1) con_type12,
 group_concat(DISTINCT d.cpd_desc order by 1) con_type22,
 group_concat(DISTINCT d.cpd_id order by 1) con_type222
 from tb_as_assesment_detail a,
 (select mn_ass_no,a.orgid,max(mn_ass_id) mn_ass_id from tb_as_assesment_mast a,tb_organisation b where a.orgid=b.ORGID
 AND a.orgid=(case when COALESCE(87,0)=0 then COALESCE(a.orgid,0) else COALESCE(87,0) end)  
 and B.ORG_CPD_ID_STATE=(CASE WHEN COALESCE(0,0)=0 THEN COALESCE(B.ORG_CPD_ID_STATE,0) ELSE COALESCE(0,0) END)
 AND B.ORG_CPD_ID_DIV=(CASE WHEN COALESCE(0,0)=0 THEN COALESCE(B.ORG_CPD_ID_DIV,0) ELSE COALESCE(0,0) END)
 AND B.ORG_CPD_ID_DIS=(CASE WHEN COALESCE(0,0)=0 THEN COALESCE(B.ORG_CPD_ID_DIS,0) ELSE COALESCE(0,0) END)
 group by mn_ass_no,a.orgid) b,tb_comparent_det c,tb_comparam_det d
 where a.orgid=b.orgid and a.mn_ass_id=b.mn_ass_id and MN_assd_usagetype1=c.cod_id and MN_assd_constru_type=d.cpd_id
 group by MN_ASS_no,A.ORGID /*having count(1)>1*/) x left join
 (SELECT TAX_ID,PRO_BM_FROMDT,B.ORGID,BM_IDNO,PRO_PROP_NO,
 COALESCE(PRO_BD_CUR_TAXAMT,0) AS ORIGINAL_TOTAL_CUR_DEMAND,
 COALESCE(PRO_BD_PRV_ARRAMT,0) AS ORIGINAL_TOTAL_ARR_DEMAND,
 COALESCE(PRO_BD_CUR_TAXAMT,0)+ COALESCE(PRO_BD_PRV_ARRAMT,0) total_demand,
 (COALESCE(PRO_BD_CUR_TAXAMT,0) - COALESCE(PRO_BD_CUR_BAL_TAXAMT,0)) cur_colection,
 (COALESCE(PRO_BD_PRV_ARRAMT,0) - COALESCE(PRO_BD_PRV_BAL_ARRAMT,0)) arr_colection,
 (COALESCE(PRO_BD_CUR_TAXAMT,0) - COALESCE(PRO_BD_CUR_BAL_TAXAMT,0)) + (COALESCE(PRO_BD_PRV_ARRAMT,0) - COALESCE(PRO_BD_PRV_BAL_ARRAMT,0)) total_collection,
 COALESCE(PRO_BD_CUR_BAL_TAXAMT,0) AS ORIGINAL_TOTAL_CUR_OUT,
 COALESCE(PRO_BD_PRV_BAL_ARRAMT,0) AS ORIGINAL_TOTAL_ARR_OUT,
 COALESCE(PRO_BD_CUR_BAL_TAXAMT,0) +  COALESCE(PRO_BD_PRV_BAL_ARRAMT,0) AS TOTAL_OUTSTANDING_AS_ON
 FROM TB_AS_PRO_BILL_DET A,(SELECT PRO_ASS_ID,ORGID,PRO_BM_IDNO,PRO_PROP_NO,PRO_BM_FROMDT
 FROM TB_AS_PRO_BILL_MAS
 WHERE PRO_BM_FROMDT BETWEEN (SELECT FA_FROMDATE FROM TB_FINANCIALYEAR WHERE DATE_SUB(CURDATE(), INTERVAL 365 DAY) BETWEEN FA_FROMDATE AND FA_TODATE)
 AND (SELECT FA_TODATE FROM TB_FINANCIALYEAR WHERE DATE_SUB(CURDATE(), INTERVAL 365 DAY) BETWEEN FA_FROMDATE AND FA_TODATE)
 and orgid=(case when COALESCE(0,0)=0 then COALESCE(orgid,0) else COALESCE(0,0) end)) B
 WHERE A.BM_IDNO=B.PRO_BM_IDNO and TAX_ID=(CASE WHEN COALESCE(0,0)=0 THEN COALESCE(TAX_ID,0) ELSE COALESCE(0,0) END)
 UNION ALL
 SELECT TAX_ID,MN_FROMDT,B.ORGID,BM_IDNO,MN_PROP_NO,
 COALESCE(BD_CUR_TAXAMT,0) AS ORIGINAL_TOTAL_CUR_DEMAND,
 COALESCE(BD_PRV_ARRAMT,0) AS ORIGINAL_TOTAL_ARR_DEMAND,
 COALESCE(BD_CUR_TAXAMT,0)+ COALESCE(BD_PRV_ARRAMT,0),
 (COALESCE(BD_CUR_TAXAMT,0) - COALESCE(BD_CUR_BAL_TAXAMT,0)) cur_coolection,
 (COALESCE(BD_PRV_ARRAMT,0) - COALESCE(BD_PRV_BAL_ARRAMT,0)) arr_coolection,
 (COALESCE(BD_CUR_TAXAMT,0) - COALESCE(BD_CUR_BAL_TAXAMT,0)) + (COALESCE(BD_PRV_ARRAMT,0) - COALESCE(BD_PRV_BAL_ARRAMT,0)) total_collection,
 COALESCE(BD_CUR_BAL_TAXAMT,0) AS ORIGINAL_TOTAL_CUR_OUT,
 COALESCE(BD_PRV_BAL_ARRAMT,0) AS ORIGINAL_TOTAL_ARR_OUT,
 COALESCE(BD_CUR_BAL_TAXAMT,0) +  COALESCE(BD_PRV_BAL_ARRAMT,0) AS TOTAL_OUTSTANDING_AS_ON
 FROM TB_AS_BILL_DET A , (SELECT MN_ASS_ID,ORGID,MN_BM_IDNO,MN_PROP_NO,MN_FROMDT
 FROM TB_AS_BILL_MAS WHERE MN_FROMDT BETWEEN 
 (SELECT FA_FROMDATE FROM TB_FINANCIALYEAR WHERE DATE_SUB(CURDATE(), INTERVAL 365 DAY)  BETWEEN FA_FROMDATE AND FA_TODATE) 
 AND (SELECT FA_TODATE FROM TB_FINANCIALYEAR WHERE DATE_SUB(CURDATE(), INTERVAL 365 DAY) BETWEEN FA_FROMDATE AND FA_TODATE))
 and orgid=(case when COALESCE(87,0)=0 then COALESCE(orgid,0) else COALESCE(87,0) end)) B
 WHERE BM_IDNO=MN_BM_IDNO and TAX_ID=(CASE WHEN COALESCE(0,0)=0 THEN COALESCE(TAX_ID,0) ELSE COALESCE(0,0) END)) y 
 on x.MN_ASS_no=y.PRO_PROP_NO and x.orgid=y.orgid
 group by con_type11

