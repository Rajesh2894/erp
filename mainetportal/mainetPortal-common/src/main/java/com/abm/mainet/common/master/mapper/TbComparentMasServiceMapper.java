/*
 * Created on 6 Aug 2015 ( Time 16:35:27 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.common.master.mapper;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.abm.mainet.common.domain.TbComparamMasEntity;
import com.abm.mainet.common.domain.TbComparentMasEntity;
import com.abm.mainet.common.dto.TbComparentMas;
import com.abm.mainet.common.utility.AbstractServiceMapper;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class TbComparentMasServiceMapper extends AbstractServiceMapper {

    /**
     * ModelMapper : bean to bean mapping library.
     */
    private ModelMapper modelMapper;

    /**
     * Constructor.
     */
    public TbComparentMasServiceMapper() {
        modelMapper = new ModelMapper();
        modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    }

    /**
     * Mapping from 'TbComparentMasEntity' to 'TbComparentMas'
     * @param tbComparentMasEntity
     */
    public TbComparentMas mapTbComparentMasEntityToTbComparentMas(TbComparentMasEntity tbComparentMasEntity) {
        if (tbComparentMasEntity == null) {
            return null;
        }

        // --- Generic mapping
        TbComparentMas tbComparentMas = map(tbComparentMasEntity, TbComparentMas.class);

        // --- Link mapping ( link to TbComparamMas )
        if (tbComparentMasEntity.getTbComparamMas() != null) {
            tbComparentMas.setCpmId(tbComparentMasEntity.getTbComparamMas().getCpmId());
        }
        return tbComparentMas;
    }

    /**
     * Mapping from 'TbComparentMas' to 'TbComparentMasEntity'
     * @param tbComparentMas
     * @param tbComparentMasEntity
     */
    public void mapTbComparentMasToTbComparentMasEntity(TbComparentMas tbComparentMas,
            TbComparentMasEntity tbComparentMasEntity) {
        if (tbComparentMas == null) {
            return;
        }

        // --- Generic mapping
        map(tbComparentMas, tbComparentMasEntity);

        // --- Link mapping ( link : tbComparentMas )
        if (hasLinkToTbComparamMas(tbComparentMas)) {
            TbComparamMasEntity tbComparamMas1 = new TbComparamMasEntity();
            tbComparamMas1.setCpmId(tbComparentMas.getCpmId());
            tbComparentMasEntity.setTbComparamMas(tbComparamMas1);
        } else {
            tbComparentMasEntity.setTbComparamMas(null);
        }

    }

    /**
     * Verify that TbComparamMas id is valid.
     * @param TbComparamMas TbComparamMas
     * @return boolean
     */
    private boolean hasLinkToTbComparamMas(TbComparentMas tbComparentMas) {
        if (tbComparentMas.getCpmId() != null) {
            return true;
        }
        return false;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ModelMapper getModelMapper() {
        return modelMapper;
    }

    protected void setModelMapper(ModelMapper modelMapper) {
        this.modelMapper = modelMapper;
    }

}