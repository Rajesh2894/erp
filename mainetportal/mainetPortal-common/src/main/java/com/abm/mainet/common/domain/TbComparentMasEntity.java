/*
 * Created on 6 Aug 2015 ( Time 16:35:19 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.abm.mainet.common.domain;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;

/**
 * Persistent class for entity stored in table "TB_COMPARENT_MAS"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name = "TB_COMPARENT_MAS")
// Define named queries here
@NamedQueries({
        @NamedQuery(name = "TbComparentMasEntity.countAll", query = "SELECT COUNT(x) FROM TbComparentMasEntity x")
})
public class TbComparentMasEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    // ----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    // ----------------------------------------------------------------------
    @Id

    @GenericGenerator(name = "MyCustomGenerator", strategy = "com.abm.mainet.common.dao.SequenceIdGenerator")
    @GeneratedValue(generator = "MyCustomGenerator")

    @Column(name = "COM_ID", nullable = false)
    private Long comId;

    // ----------------------------------------------------------------------
    // ENTITY DATA FIELDS
    // ----------------------------------------------------------------------
    @Column(name = "COM_DESC", nullable = false)
    private String comDesc;

    @Column(name = "COM_VALUE", nullable = false)
    private String comValue;

    @Column(name = "COM_LEVEL", nullable = false)
    private Long comLevel;

    @Column(name = "COM_STATUS")
    private String comStatus;

    @Column(name = "ORGID", nullable = false)
    private Long orgid;

    @Column(name = "USER_ID", nullable = false)
    private Long userId;

    @Column(name = "LANG_ID", nullable = false)
    private Long langId;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "LMODDATE", nullable = false)
    private Date lmoddate;

    @Column(name = "UPDATED_BY")
    private Long updatedBy;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_DATE")
    private Date updatedDate;

    @Column(name = "COM_DESC_MAR")
    private String comDescMar;

    @Column(name = "COM_REPLICATE_FLAG", length = 1)
    private String comReplicateFlag;

    @Column(name = "LG_IP_MAC", length = 100)
    private String lgIpMac;

    @Column(name = "LG_IP_MAC_UPD", length = 100)
    private String lgIpMacUpd;

    // ----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    // ----------------------------------------------------------------------
    @OneToMany(mappedBy = "tbComparentMas", targetEntity = TbComparentDetEntity.class, cascade = CascadeType.ALL)
    private List<TbComparentDetEntity> listOfTbComparentDet;

    @ManyToOne
    @JoinColumn(name = "CPM_ID", referencedColumnName = "CPM_ID")
    private TbComparamMasEntity tbComparamMas;

    // ----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    // ----------------------------------------------------------------------
    public TbComparentMasEntity() {
        super();
    }

    // ----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    // ----------------------------------------------------------------------
    public void setComId(Long comId) {
        this.comId = comId;
    }

    public Long getComId() {
        return this.comId;
    }

    // ----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    // ----------------------------------------------------------------------
    // --- DATABASE MAPPING : COM_DESC ( NVARCHAR2 )
    public void setComDesc(String comDesc) {
        this.comDesc = comDesc;
    }

    public String getComDesc() {
        return this.comDesc;
    }

    // --- DATABASE MAPPING : COM_VALUE ( NVARCHAR2 )
    public void setComValue(String comValue) {
        this.comValue = comValue;
    }

    public String getComValue() {
        return this.comValue;
    }

    // --- DATABASE MAPPING : COM_LEVEL ( NUMBER )
    public void setComLevel(Long comLevel) {
        this.comLevel = comLevel;
    }

    public Long getComLevel() {
        return this.comLevel;
    }

    // --- DATABASE MAPPING : COM_STATUS ( NVARCHAR2 )
    public void setComStatus(String comStatus) {
        this.comStatus = comStatus;
    }

    public String getComStatus() {
        return this.comStatus;
    }

    // --- DATABASE MAPPING : ORGID ( NUMBER )
    public void setOrgid(Long orgid) {
        this.orgid = orgid;
    }

    public Long getOrgid() {
        return this.orgid;
    }

    // --- DATABASE MAPPING : USER_ID ( NUMBER )
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    public Long getUserId() {
        return this.userId;
    }

    // --- DATABASE MAPPING : LANG_ID ( NUMBER )
    public void setLangId(Long langId) {
        this.langId = langId;
    }

    public Long getLangId() {
        return this.langId;
    }

    // --- DATABASE MAPPING : LMODDATE ( DATE )
    public void setLmoddate(Date lmoddate) {
        this.lmoddate = lmoddate;
    }

    public Date getLmoddate() {
        return this.lmoddate;
    }

    // --- DATABASE MAPPING : UPDATED_BY ( NUMBER )
    public void setUpdatedBy(Long updatedBy) {
        this.updatedBy = updatedBy;
    }

    public Long getUpdatedBy() {
        return this.updatedBy;
    }

    // --- DATABASE MAPPING : UPDATED_DATE ( DATE )
    public void setUpdatedDate(Date updatedDate) {
        this.updatedDate = updatedDate;
    }

    public Date getUpdatedDate() {
        return this.updatedDate;
    }

    // --- DATABASE MAPPING : COM_DESC_MAR ( NVARCHAR2 )
    public void setComDescMar(String comDescMar) {
        this.comDescMar = comDescMar;
    }

    public String getComDescMar() {
        return this.comDescMar;
    }

    // --- DATABASE MAPPING : COM_REPLICATE_FLAG ( CHAR )
    public void setComReplicateFlag(String comReplicateFlag) {
        this.comReplicateFlag = comReplicateFlag;
    }

    public String getComReplicateFlag() {
        return this.comReplicateFlag;
    }

    // --- DATABASE MAPPING : LG_IP_MAC ( VARCHAR2 )
    public void setLgIpMac(String lgIpMac) {
        this.lgIpMac = lgIpMac;
    }

    public String getLgIpMac() {
        return this.lgIpMac;
    }

    // --- DATABASE MAPPING : LG_IP_MAC_UPD ( VARCHAR2 )
    public void setLgIpMacUpd(String lgIpMacUpd) {
        this.lgIpMacUpd = lgIpMacUpd;
    }

    public String getLgIpMacUpd() {
        return this.lgIpMacUpd;
    }

    // ----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    // ----------------------------------------------------------------------
    public void setListOfTbComparentDet(List<TbComparentDetEntity> listOfTbComparentDet) {
        this.listOfTbComparentDet = listOfTbComparentDet;
    }

    public List<TbComparentDetEntity> getListOfTbComparentDet() {
        return this.listOfTbComparentDet;
    }

    public void setTbComparamMas(TbComparamMasEntity tbComparamMas) {
        this.tbComparamMas = tbComparamMas;
    }

    public TbComparamMasEntity getTbComparamMas() {
        return this.tbComparamMas;
    }

    // ----------------------------------------------------------------------
    // toString METHOD
    // ----------------------------------------------------------------------
    public String toString() {
        StringBuffer sb = new StringBuffer();
        sb.append("[");
        sb.append(comId);
        sb.append("]:");
        sb.append(comDesc);
        sb.append("|");
        sb.append(comValue);
        sb.append("|");
        sb.append(comLevel);
        sb.append("|");
        sb.append(comStatus);
        sb.append("|");
        sb.append(orgid);
        sb.append("|");
        sb.append(userId);
        sb.append("|");
        sb.append(langId);
        sb.append("|");
        sb.append(lmoddate);
        sb.append("|");
        sb.append(updatedBy);
        sb.append("|");
        sb.append(updatedDate);
        sb.append("|");
        sb.append(comDescMar);
        sb.append("|");
        sb.append(comReplicateFlag);
        sb.append("|");
        sb.append(lgIpMac);
        sb.append("|");
        sb.append(lgIpMacUpd);
        return sb.toString();
    }

    public String[] getPkValues() {
        return new String[] { "COM", "TB_COMPARENT_MAS", "COM_ID" };
    }

}
