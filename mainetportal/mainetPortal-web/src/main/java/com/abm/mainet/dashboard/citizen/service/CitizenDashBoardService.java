/*
 * Created on 31 Dec 2015 ( Time 17:22:51 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.abm.mainet.dashboard.citizen.service;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.abm.mainet.common.constant.MainetConstants;
import com.abm.mainet.common.domain.Employee;
import com.abm.mainet.common.domain.Organisation;
import com.abm.mainet.common.dto.ApplicationPortalMasterDTO;
import com.abm.mainet.dashboard.citizen.dao.ICitizenDashBoardDao;

@Service
public class CitizenDashBoardService implements ICitizenDashBoardService {

    @Autowired
    private ICitizenDashBoardDao iCitizenDashBoardDao;

    @Override
    @Transactional(readOnly = true)
    public List<ApplicationPortalMasterDTO> findApplicationStatusList(
            final String flag, final Employee employee,
            final Organisation organisation, final int langId) {

        final List<Object[]> applicationPortalMasters = iCitizenDashBoardDao.getApplicationList(flag, employee, organisation);
        return getApplicationServiceMasterList(applicationPortalMasters, langId, organisation, flag);
    }

    private List<ApplicationPortalMasterDTO> getApplicationServiceMasterList(final List<Object[]> applicationPortalMasters,
            final int langId, final Organisation organisation, final String flag) {

        final List<ApplicationPortalMasterDTO> applicationPortalMasterDTOs = new ArrayList<>();
        ApplicationPortalMasterDTO applicationPortalMasterDTO = null;
        if ((applicationPortalMasters != null) && !applicationPortalMasters.isEmpty()) {
            for (final Object[] obj : applicationPortalMasters) {
                applicationPortalMasterDTO = new ApplicationPortalMasterDTO();
                applicationPortalMasterDTO.setId(Long.parseLong(obj[0].toString()));
                final Date appDate = (Date) obj[1];
                applicationPortalMasterDTO.setApplicationDate(appDate);
                applicationPortalMasterDTO.setApplicationId(Long.parseLong(obj[2].toString()));
                applicationPortalMasterDTO.setServiceId(Long.parseLong(obj[3].toString()));
                applicationPortalMasterDTO.setOrgId(organisation.getOrgid());
                final Date slaDate = (Date) obj[5];
                applicationPortalMasterDTO.setSlaDate(slaDate);
                final Employee emp = (Employee) obj[6];
                applicationPortalMasterDTO.setCitizenId(emp.getEmpId());
                applicationPortalMasterDTO.setAppStatus(obj[7].toString());
                applicationPortalMasterDTO.setShortName(obj[8].toString());
                if (langId == MainetConstants.ENGLISH) {
                    applicationPortalMasterDTO.setServiceName(obj[9].toString());
                } else {
                    applicationPortalMasterDTO.setServiceName(obj[10].toString());
                }
                applicationPortalMasterDTO.setFlag(flag);
                applicationPortalMasterDTOs.add(applicationPortalMasterDTO);
            }
        }
        return applicationPortalMasterDTOs;

    }

    @Override
    @Transactional(readOnly = true)
    public int countForApplicationStatus(final String flag, final Employee employee, final Organisation orgId) {
        return iCitizenDashBoardDao.countForApplicationStatus(flag, employee, orgId);
    }

    @Override
    @Transactional(readOnly = true)
    public List<ApplicationPortalMasterDTO> getApplicationListForAdmin(final String flag,
            final Organisation organisation, final int langId) {

        final List<Object[]> applicationPortalMasters = iCitizenDashBoardDao.getApplicationListForAdmin(flag, organisation);
        return getApplicationServiceMasterList(applicationPortalMasters, langId, organisation, flag);
    }

    @Override
    @Transactional(readOnly = true)
    public int countForApplicationStatusForAdmin(final String flag, final Organisation orgId) {
        return iCitizenDashBoardDao.countForApplicationStatusForAdmin(flag, orgId);
    }

}
